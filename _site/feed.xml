<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-09-04T21:29:19+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">NothingButCloud</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><entry><title type="html">Setup Azure automation to find unused user and computer accounts (step-by-step guide)</title><link href="http://localhost:4000/2023-08-22-StaledAutomation/" rel="alternate" type="text/html" title="Setup Azure automation to find unused user and computer accounts (step-by-step guide)" /><published>2023-08-22T10:00:32+02:00</published><updated>2023-09-04T21:29:18+02:00</updated><id>http://localhost:4000/StaledAutomation</id><content type="html" xml:base="http://localhost:4000/2023-08-22-StaledAutomation/"><![CDATA[<figure>
  <img src="/MyPics/2023-08-22-StaledAutomation_Cover.png" style="width:75%" />
  <figcaption>Niran Kasri auf Pixabay</figcaption>
</figure>

<p>(<a href="https://nothingbutcloud.net/2023-08-22-StaledAutomation/#overview-english-version">For English text</a>)</p>

<ul id="markdown-toc">
  <li><a href="#überblick" id="markdown-toc-überblick">Überblick</a></li>
  <li><a href="#das-zertifikat" id="markdown-toc-das-zertifikat">Das Zertifikat</a></li>
  <li><a href="#erstellen-des-automation-konto" id="markdown-toc-erstellen-des-automation-konto">Erstellen des Automation-Konto</a>    <ul>
      <li><a href="#zertifikat-private-key-importieren" id="markdown-toc-zertifikat-private-key-importieren">Zertifikat (private Key) importieren</a></li>
      <li><a href="#module-importieren" id="markdown-toc-module-importieren">Module importieren</a></li>
    </ul>
  </li>
  <li><a href="#erstellen-der-app-registration" id="markdown-toc-erstellen-der-app-registration">Erstellen der App Registration</a>    <ul>
      <li><a href="#zertifikat-public-key-importieren" id="markdown-toc-zertifikat-public-key-importieren">Zertifikat (Public Key) importieren</a></li>
      <li><a href="#graph-permissions-einrichten" id="markdown-toc-graph-permissions-einrichten">Graph Permissions einrichten</a></li>
    </ul>
  </li>
  <li><a href="#erstellen-des-speicherkontos" id="markdown-toc-erstellen-des-speicherkontos">Erstellen des Speicherkontos</a>    <ul>
      <li><a href="#container-dem-speicherkonto-hinzufügen" id="markdown-toc-container-dem-speicherkonto-hinzufügen">Container dem Speicherkonto hinzufügen</a></li>
    </ul>
  </li>
  <li><a href="#powershell-runbook-integrieren" id="markdown-toc-powershell-runbook-integrieren">Powershell Runbook integrieren</a>    <ul>
      <li><a href="#ergebnisse-anzeigen" id="markdown-toc-ergebnisse-anzeigen">Ergebnisse anzeigen</a></li>
    </ul>
  </li>
  <li><a href="#overview-english-version" id="markdown-toc-overview-english-version">Overview (English version)</a></li>
  <li><a href="#the-certificate" id="markdown-toc-the-certificate">The certificate</a></li>
  <li><a href="#create-automation-account" id="markdown-toc-create-automation-account">Create Automation Account</a>    <ul>
      <li><a href="#import-certificate-private-key" id="markdown-toc-import-certificate-private-key">Import certificate (private key)</a></li>
      <li><a href="#import-powershell-modules" id="markdown-toc-import-powershell-modules">Import Powershell Modules</a></li>
    </ul>
  </li>
  <li><a href="#create-app-registration" id="markdown-toc-create-app-registration">Create App registration</a>    <ul>
      <li><a href="#import-certificate-public-key" id="markdown-toc-import-certificate-public-key">Import certificate (public key)</a></li>
      <li><a href="#add-graph-permissions" id="markdown-toc-add-graph-permissions">Add Graph Permissions</a></li>
    </ul>
  </li>
  <li><a href="#create-the-storage-account" id="markdown-toc-create-the-storage-account">Create the Storage Account</a>    <ul>
      <li><a href="#add-the-container-to-the-storage-account" id="markdown-toc-add-the-container-to-the-storage-account">Add the container to the Storage Account</a></li>
    </ul>
  </li>
  <li><a href="#add-runbook" id="markdown-toc-add-runbook">Add Runbook</a>    <ul>
      <li><a href="#show-results" id="markdown-toc-show-results">Show results</a></li>
    </ul>
  </li>
</ul>

<h2 id="überblick">Überblick</h2>
<p>Du findest in meinem Powershell-Repository (<a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">Link</a>) einige Cmdlets aus dem Microsoft-Graph-Modul. Diese Cmdlets helfen, Benutzer- und Computerobjekte in Microsoft Entra ID zu identifizieren, die längere Zeit nicht benutzt wurden. Dabei wird auf den Zeitstempel der letzten Nutzung der Objekte zurückgegriffen. Im Repository sind Beispiele und Anregungen enthalten, wie die Cmdlets angewendet werden können. Das kann helfen, manuell Listen zu erstellen und die Ergebnisse in CSV-Dateien oder direkt in XLSX-Dateien abzulegen. Schau gerne in meinen Blog Beitrag für Details zu diesem Thema (<a href="https://nothingbutcloud.net/2023-03-22-FindStaledObjectsInAAD/">Link</a>)</p>

<p>Wenn du die Befehle aus den Beispielen verwenden möchtest, um diese Vorgänge automatisiert in Azure zu starten, hast du verschiedene Möglichkeiten. Eine Logic App oder ein Automation-Konto bieten sich hierfür an. Im Folgenden findest du eine Schritt-für-Schritt-Anleitung zur Einrichtung eines Automation-Kontos, mitsamt den notwendigen Skripten und allem, was in Azure dazu gehört. Einmal Implementiert brauchst du dich dann um nichts mehr kümmern und erhältst regelmäßig die Exceldatei mit seit längerem unbenutzten Objekten.</p>

<p>Grundlage für den Aufbau des Automation-Kontos ist folgender Artikel von Microsoft:
(<a href="https://learn.microsoft.com/de-de/azure/active-directory/governance/identity-governance-automation">Automatisieren von Microsoft Entra Identity Governance-Aufgaben über Azure Automation und Microsoft Graph</a>)</p>

<p>Wir bauen hier in diesem Beitrag auf das von Microsoft beschriebene Stzenario auf und ergänzen das Setup mit den relevanten Technologien, die notwendig sind, damit der Automatismus den Anforderungen für das Ermitteln ungenutzter Computer- und Benutzerobjekte folgt. Hierfür integrieren wir beispielsweise die Graph-Module, kümmern uns um die relevanten Graph-Berechtigungen und sorgen dafür, dass die Ergebnisse als Excel regelmäßig in einem Speicherkonto laden.</p>

<p>Zusammenfassend findest du hier eine Anleitung für das Setup folgender Technologien:</p>

<ul>
  <li>Implementieren der App Registration</li>
  <li>Erstellen des Zertifikats und hinterlegen in Azure Automation und App Registration</li>
  <li>Ein Speicherkonto</li>
  <li>Automation-Konto</li>
</ul>

<h2 id="das-zertifikat">Das Zertifikat</h2>
<p>Nachfolgende Cmdlets (<a href="https://github.com/KlaBier/Powershell/blob/main/AutomationRunbookLab/SelfSignedCert.ps1">Link</a>) erstellen ein selbstsigniertes Zertifikat. Führe die Befehle auf einem Computer deiner Wahl aus. In meinem Lab hat es mit einem Windows 11 Client bestens funktioniert.</p>

<p>Weitere Informationen zum Erstellen selbstsignierter Zertifikate findest du in folgendem Microsoft Artikel:
(<a href="https://learn.microsoft.com/de-de/azure/active-directory/develop/howto-create-self-signed-certificate">Erstellen Sie ein selbstsigniertes öffentliches Zertifikat zum Authentifizieren Ihrer Anwendung</a></p>

<p><strong>➔ Hinweis:</strong>
Selbstsignierte Zertifikate sollten für den produktiven Einsatz vermieden werden, da sie nicht von einer vertrauenswürdigen Zertifizierungsstelle ausgestellt wurden. Wenn du die Möglichkeit hast, ein Zertifikat von einer autorisierten Zertifizierungsstelle zu beziehen, ist dies der empfohlene Weg. Du musst dabei sicherstellen, das neben dem öffentlichen Schlüssel der private Schlüssel ebenfalls exportiert werden kann, da beides für den Import in Azure und Microsoft Entra ID benötigt wird. Im vorliegenden Beispiel halte ich jedoch ein selbstsigniertes Zertifikat für unbedenklich, da es nur für die Authentifizierung der App-Registrierung eingesetzt wird, die meiner Meinung nach unkritisch ist.
Alternativ ließe sich auch ein Secret für die Authentifizierung in der App-Registrierung verwenden. Ich persönlich verzichte jedoch gerne auf Secrets. Sie erfordern den Umgang (notieren, kopieren, einfügen, …) mit dem Secret-Wert, der im Grunde nichts anderes als ein Passwort ist. Wenn du mehr zum Thema Secrets wissen möchtest, schau doch mal in folgendem Blog Beitrag von mir (<a href="https://nothingbutcloud.net/2023-01-07-GetSecretInfos">Link</a>), Secrets haben nämlich noch mehr Nachteile.</p>

<p>Wir entscheiden uns also für das Zertifikat und wenn du es mit den Cmdlets generierst und exportierst sollte dein Bildschirm in etwas wie folgt aussehen:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_1.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_1.png" alt="StaledAutomation_1" /></a>
Erstellen des Zertifikates</p>

<!---
Das geht auch aber die oben benutzte Variate ist besser, da ein eigenes Fenster geöffnet wird 
<figure>
  <img src="/MyPics/2023-08-22-StaledAutomation_1.png" style="width:100%">
  <figcaption>Erstellen des Zertifikates</figcaption>
</figure>
-->

<h2 id="erstellen-des-automation-konto">Erstellen des Automation-Konto</h2>

<p>Als nächstes wird das Automation-Konto erstellt. Im Setup-Prozess müssen folgende Seiten bedient werden.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_2.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_2.png" alt="StaledAutomation_2" /></a>
Basic Seite: wähle Subscription und Ressource Gruppe deiner Wahl</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_3.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_3.png" alt="StaledAutomation_3" /></a>
Advanced Seite: keine Änderung</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_4.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_4.png" alt="StaledAutomation_4" /></a>
Netzwerk Seite: keine Änderung</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_5.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_5.png" alt="StaledAutomation_5" /></a>
Seite mit den Tags: keine Änderung</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_6.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_6.png" alt="StaledAutomation_6" /></a>
Abschlussseite und fertig</p>

<h3 id="zertifikat-private-key-importieren">Zertifikat (private Key) importieren</h3>

<p>Nach Erstellung des Automation-Kontos wenden wir uns dem Zertifikat zu, das wir auf dem Windows 11 Client generiert und mit dem dazugehörigen privaten Schlüssel exportiert haben. Wenn du auf einem Client ein selbst signiertes Zertifikat verwendest, beispielsweise um eine zertifikatsbasierte Authentifizierung mit der Powershell zu initialisieren, musst du bezüglich des privaten Schlüssels nichts tun, da er im lokalen Zertifikatsspeicher des jeweiligen Computers liegt und von dort aus direkt verwendet wird.
Im vorliegenden Beispiel ist dies aber nicht der Fall, da die Authentifizierung vom Automation-Konto ausgeht und nicht von einem Computer. Du musst den zuvor exportierten privaten Schlüssel hierzu in Azure importieren.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_7.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_7.png" alt="StaledAutomation_7" /></a>
Import des Zertifikates (privater Schlüssel) in Automation</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_8.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_8.png" alt="StaledAutomation_8" /></a>
Nach dem Import des Zertifikates in Automation</p>

<h3 id="module-importieren">Module importieren</h3>

<p>Nach dem Import des Zertifikates geht es in dem Automation-Konto weiter. Hier heisst es die Powershell Module für das Runbook hinzuzufügen.</p>

<p>An den bestehenden Standardmodulen ändert sich nichts, lediglich die nachfolgend abgebildeten Module sind hinzuzufügen</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_9.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_9.png" alt="StaledAutomation_9" /></a>
Hinzuzufügende Module im Automation-Konto</p>

<p>Neben den drei Graph-Modulen benötigst du für die Verwendung das Modul “ImportExcel” von Doug Finke (<a href="https://github.com/dfinke/ImportExcel">Link</a>). Alle Module können über Browse Gallery problemlos hinzugefügt werden, wie die folgenden Abbildungen am Beispiel von “ImportExcel” zeigen. Die Vorgehensweise für die Graph-Module ist analog.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_10.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_10.png" alt="StaledAutomation_10" /></a>
Browse Gallery zum Hinzufügen weiterer Module, sogenannter Custom Module</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_11.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_11.png" alt="StaledAutomation_11" /></a>
Import des Modules bestätigen und fertig</p>

<h2 id="erstellen-der-app-registration">Erstellen der App Registration</h2>

<p>Das Automation-Konto ist noch nicht fertig, hier sind unter anderem noch Variablen zu ergänzen. Die hierfür notwendigen Inhalte entstammen aus Azure Elementen, die wir bis jetzt noch nicht erstellt haben, die App Registration und auch das Speicherkonto.</p>

<p>Das Anlegen der App Registration ist unspektakulär. Füge einfach in Microsoft Entra ID unter “App registrations” eine ebensolche hinzu und lasse alle Einstellungen beim Standard. Für unser Beispiel sind der öffentlichen Schlüssel des Zertifikates und die MS Graph Berechtigungen zusätzlich erforderlich. Der Name ist frei. Bei mir im Lab lautet er “AdminAutomationApp”</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_12.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_12.png" alt="StaledAutomation_12" /></a>
Erstellen einer App Registration mit Standardeinstellungen</p>

<h3 id="zertifikat-public-key-importieren">Zertifikat (Public Key) importieren</h3>

<p>Ist die App Registration erstellt, fügen wir den öffentlichen Schlüssel des Zertifikates hinzu, den wir weiter oben (Win11 Client) erstellt und exportiert haben.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_13.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_13.png" alt="StaledAutomation_13" /></a>
“Upload certificate” fügt den öffentlichen Schlüssel eines Zertifikates hinzu …</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_14.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_14.png" alt="StaledAutomation_14" /></a>
… hierzu die zuvor exportierte CER Datei für den “Upload” angeben</p>

<h3 id="graph-permissions-einrichten">Graph Permissions einrichten</h3>

<p>Anschließend noch die MS Graph Berechtigungen anpassen, so dass die Liste mit den Berechtigungen wie folgt aussieht:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_15.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_15.png" alt="StaledAutomation_15" /></a>
Graph Berechtigungen für die App Registration</p>

<p>Die “Application ID” und die “Tenant ID” aus deinem Setup benötigst du später bei den Variablen im Automation-Konto. Kopiere sie am besten in ein Textfile für später.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_16.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_16.png" alt="StaledAutomation_16" /></a>
Übersichtsseite der erstellten App Registration</p>

<h2 id="erstellen-des-speicherkontos">Erstellen des Speicherkontos</h2>

<p>An dieser Stelle schließen wir die App-Registrierung ab und richten unsere Aufmerksamkeit auf das Speicherkonto, das vom Runbook genutzt wird, um die Excel-Datei mit den unbenutzten Objekten zu speichern.</p>

<p>Ein Speicherkonto ist ein komplexes Objekt, mit vielfältigen Einsatzmöglichkeiten. In unserem Setup dient es allein zum Erstellen eines Containers, ähnlich einem Ordner im Dateisystem, als Ziel für die Excel-Datei.</p>

<p><strong>➔ Hinweis:</strong>
Übrigens empfiehlt es sich dieselbe Ressourcengruppe wie beim Automation-Konto zu verwenden. Wenn du nämlich das Setup nur testen möchtest, reicht es später aus, lediglich die Resssourcengruppe zu entfernen um aufzuräumen. Das gilt jedoch nicht für die zuvor erstellte App-Registrierung, diese ist unabhängig von einer Subscription und einer Ressourcengruppe, App-Registrierungen befinden sich in Microsoft Entra ID.</p>

<p>Also, weiter geht es mit dem Speicherkonto:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_17.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_17.jpg" alt="StaledAutomation_17" /></a>
Einstiegsseite zum Erstellen des Speicherkontos</p>

<!--
<figure>
  <img src="/MyPics/2023-08-22-StaledAutomation_17.jpg" style="width:100%">
  <figcaption>Figure 3: List with devices exported to Excel</figcaption>
</figure>
-->

<p>Es ist nicht notwendig nachfolgend alle Seiten des Assistenten abzubilden, die für das Erstellen eines Speicherkontos in Azure benötigt werden. Die zwei folgenden Screenshots fassen zusammen, welche Optionen und Einstellungen insgesamt hier funktionieren.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_18.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_18.jpg" alt="StaledAutomation_18" /></a>
Zusammenfassung aller Werte vor dem Erstellen des Speicherkontos (Seite1)</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_19.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_19.jpg" alt="StaledAutomation_19" /></a>
Zusammenfassung aller Werte vor dem Erstellen des Speicherkontos (Seite 2)</p>

<p>Nach Erstellung des Kontos sieht die Übersichtsseite wie folgt aus:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_20.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_20.png" alt="StaledAutomation_20" /></a>
Übersicht des Speicherkontos</p>

<h3 id="container-dem-speicherkonto-hinzufügen">Container dem Speicherkonto hinzufügen</h3>

<p>Als abschließende Maßnahme fügst du dem Speicherkonto einen Container hinzu</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_21.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_21.png" alt="StaledAutomation_21" /></a>
Hinzufügen eines Containers für das Speicherkonto</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_22.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_22.png" alt="StaledAutomation_22" /></a>
Anzeige der Container im Speicherkonto</p>

<p>Zum Abschluss werfen wir einen Blick auf den Zugriffsschlüssel des Speicherkontos. Wir benötigen den Schlüssel für die Variablen im Automatisierungskonto sowie für den Zugriff auf das Speicherkonto im Runbook. Kopiere ihn am besten ebenfalls in ein Textfile für später, wenn du die Variablen ergänzt.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_23.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_23.png" alt="StaledAutomation_23" /></a>
Zugriffsschlüssel für das Speicherkonto</p>

<p>Zugegeben, das geht definitiv sicherer als hier demonstriert. Zugriffsschlüssel sollten an einem sicheren Ort gespeichert (Key Vault) und von Zeit zu Zeit erneuert werden. Ich verzichte in dem Beispiel bewusst darauf.</p>

<p>Wir wechseln zurück zum Automation-Konto in Azure. Wir haben jetzt alles beisammen um die Variablen anzulegen.</p>

<p>Füge also folgende Variablen deinem Konto hinzu und achte darauf, dass die Namen der Variablen mit meinen hier abgebildeten übereinstimmen. Denn so werden sie in der Powershell Sequenz für das Runbook referenziert</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_24.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_24.png" alt="StaledAutomation_24" /></a>
Variablen im Automation-Konto</p>

<h2 id="powershell-runbook-integrieren">Powershell Runbook integrieren</h2>

<p>Jetzt erstellen wir das Herzstück des Automation-Kontos, das Runbook vom “Type” Powershell.
Der Name ist beliebig</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_25.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_25.png" alt="StaledAutomation_25" /></a>
Erstellen des Runbooks in Automation</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_26.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_26.png" alt="StaledAutomation_26" /></a>
Anzeige der Runbooks für das Automation-Konto</p>

<p>Wenn das Runbook erstellt ist, selektiere es und öffne den Editor …</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_27.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_27.png" alt="StaledAutomation_27" /></a></p>

<p>… füge die Powershell Sequenz aus meinem Repository (<a href="https://github.com/KlaBier/Powershell/blob/main/AutomationRunbookLab/RunbookCode.ps1">Link</a>) in den Editor ein</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_28.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_28.png" alt="StaledAutomation_28" /></a>
Der Powershell Editor im Azure Portal</p>

<p>Passe die PowerShell-Elemente an deine Bedürfnisse an oder lasse sie so, wie du sie in meinem Repository vorfindest. Wenn du im PowerShell-Editor fertig bist, ist es ratsam, mittels “Test Pane” (1) einen Test durchzuführen. Erst danach kannst du das Runbook veröffentlichen (2). Solange das Runbook im Automation-Konto nicht veröffentlicht wurde, kannst du keinen entsprechenden Zeitplan einrichten.
Wenn alle benötigten Variablen vorhanden sind und die App-Registrierung sowie das Speicherkonto gemäß den Anweisungen erstellt wurden, sollte der Bildschirm nach einem Testlauf ungefähr wie folgt aussehen:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_29.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_29.png" alt="StaledAutomation_29" /></a>
Testen des Powershell Runbooks</p>

<p>Bei Unstimmigkeiten sind die Fehlermeldungen in der Regel selbsterklärend. Eine Fehleranalyse sollte keine allzu große Hürde darstellen, da es sich hierbei wohl um Tippfehler oder ähnliches handelt.
Das Bildschirmprotokoll ist länger als hier sichtbar. Fehlermeldungen können außerhalb des Fensterinhalts liegen. Du kannst im Ausgabebereich nach oben scrollen und nachsehen, ob irgendwo ein Fehler protokolliert wurde. 
Es kann irreführend sein, dass immer “Completed” in grün angezeigt wird, auch wenn außerhalb des Ausgabefensters Hinweise auf einen Fehler hinweisen und somit der “Status” keineswegs grün ist.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_30.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_30.png" alt="StaledAutomation_30" /></a>
Fehler beim Testen des Powershell Runbooks</p>

<h3 id="ergebnisse-anzeigen">Ergebnisse anzeigen</h3>

<p>Wenn schließlich alles passt sollte in dem Container des Speicherkontos das gewünschte Excelfile liegen.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_31.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_31.png" alt="StaledAutomation_31" /></a>
Speicherkonto mit der Exceldatei</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_32.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_32.png" alt="StaledAutomation_32" /></a>
Liste mit unbenutzten Benutzerkonten</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_33.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_33.png" alt="StaledAutomation_33" /></a>
Liste mit unbenutzten Computerkonten</p>

<p>Zuletzt musst du noch ein Schedule hinzufügen und dem Runbook zuordnen. Dieser Schritt ist weitestgehend selbsterklärend.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_34.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_34.png" alt="StaledAutomation_34" /></a>
Schedule für die Zeitplanung des Runbook</p>

<p>Besonders leistungsstark und erwähnenswert finde ich hier die Möglichkeit mehrere Zeitplanungen in einem Automation-Konto vorzuhalten um hier maximale Flexibilität in der Ausführung zu gestatten.</p>

<p>Wie auch immer das Runbook ausgeführt wird, es spielt keine Rolle ob manuell, wie oben beim Test beschrieben, oder über einen Zeitplan. Du erhältst nach jeder Ausführung eine Exceldatei mit dem Zeitstempel der Ausführung im Dateinamen.</p>

<p>Das Runbook sieht im Automation-Konto abschließend wir folgt aus:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_35.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_35.png" alt="StaledAutomation_35" /></a>
Übersichtsseite des fertiggestellten Runbooks</p>

<p><strong>➔ Zusammenfassung:</strong>
Ein Automation-Konto bietet zahlreiche Gestaltungsmöglichkeiten. Mein Beispiel zeigt einige der vielfältigen Optionen die Automation bietet. Grenzen sind hier die Fantasie des Administrators.</p>

<p>Warum nicht ein neues Runbook im Automation-Konto erstellen, das die Excel-Datei nimmt und Computerkonten direkt deaktiviert oder halbjährlich löscht? Ähnliches lässt sich auch mit Benutzerkonten verwirklichen.</p>

<p>Ich wünsche dir viel Erfolg im administrativen Umgang mit unbenutzten Identitäten und mit dem hier beschriebenen Setup.</p>

<p>Kontaktiere mich gerne für einen Austausch oder wenn du Feedback hast</p>

<p>Zu guter Letzt sei dir noch folgender Microsoft Artikel empfohlen:</p>

<p>(<a href="https://learn.microsoft.com/de-de/azure/automation/automation-runbook-execution">Ausführen von Runbooks in Azure Automation</a>)</p>

<h2 id="overview-english-version">Overview (English version)</h2>
<p>You can find some cmdlets from the Microsoft Graph module in my Powershell repository (<a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">link</a>). These cmdlets help to identify user and computer objects in Microsoft Entra ID that have not been used for a long time. This is done by reverting to the timestamp of the last time the objects were used. The repository contains examples and suggestions on how to apply the cmdlets. This can help to manually create lists and store the results in CSV files or directly in XLSX files. Feel free to check out my blog post for details on this topic (<a href="https://nothingbutcloud.net/2023-03-22-FindStaledObjectsInAAD/">link</a>).</p>

<p>If you want to use the commands from the examples to run these operations automatically in Azure, you have several options. A Logic App or an Automation Account are good options. Below are step-by-step instructions on how to set up an Automation Account, including the necessary scripts and everything that goes with it in Azure. Once implemented, you won’t have to worry about anything and will regularly receive the Excel file with objects that have been unused for a while.</p>

<p>The basis for setting up the Automation Account is the following article from Microsoft:
(<a href="https://learn.microsoft.com/en-us/azure/active-directory/governance/identity-governance-automation">Automate Microsoft Entra Identity Governance tasks via Azure Automation and Microsoft Graph</a>)</p>

<p>Here in this post, we build on the scenario described by Microsoft and supplement the setup with the relevant technologies that are necessary for the automatism to follow the requirements for determining unused computer and user objects. For example, we integrate the graph modules, take care of the relevant graph permissions and make sure that the results load as Excel regularly in a Storage Account.</p>

<p>In summary, here is a Lab guide to setting up the following technologies:</p>

<ul>
  <li>Implement the App Registration</li>
  <li>Create the certificate and store it in Azure Automation and App Registration.</li>
  <li>Storage Account</li>
  <li>Automation Account</li>
</ul>

<h2 id="the-certificate">The certificate</h2>
<p>The following cmdlets (<a href="https://github.com/KlaBier/Powershell/blob/main/AutomationRunbookLab/SelfSignedCert.ps1">Link</a>) create a self-signed certificate. Run the commands on a computer of your choice. In my lab it worked fine with a Windows 11 client.</p>

<p>For more information about creating self-signed certificates, see the following Microsoft article:
(<a href="https://learn.microsoft.com/en-us/azure/active-directory/develop/howto-create-self-signed-certificate">Create a self-signed public certificate to authenticate your application</a></p>

<p><strong>➔ Note:</strong>
Self-signed certificates should be avoided for productive use because they are not issued by a trusted certificate authority. If you have the possibility to obtain a certificate from an authorized certification authority, this is the recommended way. You have to make sure that besides the public key the private key can be exported as well, since both are needed for the import into Azure and Microsoft Entra ID. In this example, however, I consider a self-signed certificate to be harmless, since it is only used for the authentication of the app registration, which is not critical in my opinion.
Alternatively, a secret could also be used for authentication in the app registry. However, I personally like to do without Secrets. They require handling (copy, paste, …) the Secret value, which is a kind of a password. If you want to know more about Secrets, have a look at the following blog post of mine (<a href="https://nothingbutcloud.net/2023-01-07-GetSecretInfos">Link</a>), because Secrets have even more disadvantages.</p>

<p>So we decide to use the certificate and when you generate and export it with the cmdlets your screen should look something like this:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_1.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_1.png" alt="StaledAutomation_1" /></a>
Create self-signed certificate</p>

<h2 id="create-automation-account">Create Automation Account</h2>

<p>Now we create the Automation account. The next figures show the values and parameters to be entered.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_2.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_2.png" alt="StaledAutomation_2" /></a>
Basic Page: select Subscription and Ressource Group</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_3.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_3.png" alt="StaledAutomation_3" /></a>
Advanced Page: nothing is changed</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_4.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_4.png" alt="StaledAutomation_4" /></a>
Netzwork Page: nothing is changed</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_5.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_5.png" alt="StaledAutomation_5" /></a>
Tags Page: nothing is changed</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_6.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_6.png" alt="StaledAutomation_6" /></a>
Summary page and done</p>

<h3 id="import-certificate-private-key">Import certificate (private key)</h3>

<p>After creating the Automation account, we turn to the certificate that we generated on the Windows 11 client and exported with the associated private key. If you use a self-signed certificate on a client, for example to initialize certificate-based authentication with Powershell, you don’t have to do anything regarding the private key, because it resides in the local certificate store of the respective computer and is used directly from there.
In this example, however, this is not the case because the authentication originates from the Automation account and not from a computer. You need to import the previously exported private key into Azure for this.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_7.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_7.png" alt="StaledAutomation_7" /></a>
Import the private certificate key to Automation</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_8.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_8.png" alt="StaledAutomation_8" /></a>
After certificate import in Automation</p>

<h3 id="import-powershell-modules">Import Powershell Modules</h3>

<p>After importing the certificate, we continue in the Automation Account. Here you have to add the Powershell modules for the runbook.</p>

<p>Nothing changes in the existing standard modules, only the modules shown below have to be added</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_9.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_9.png" alt="StaledAutomation_9" /></a>
Required modules in the Automation Account</p>

<p>Besides the three graph modules you need the module “ImportExcel” by Doug Finke (<a href="https://github.com/dfinke/ImportExcel">Link</a>). All modules can be added easily via Browse Gallery, as shown in the following figures using the example of “ImportExcel”. The procedure for the Graph modules is analogous.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_10.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_10.png" alt="StaledAutomation_10" /></a>
Browse Gallery to add Custum Modules</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_11.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_11.png" alt="StaledAutomation_11" /></a>
Import Powershell Modules</p>

<h2 id="create-app-registration">Create App registration</h2>

<p>The Automation Account is not yet finished, among other things, variables still need to be added here. The content required for this comes from Azure elements that we have not yet created, the app registration and also the Storage Account.</p>

<p>The creation of the App Registration is unspectacular. Just add one in Microsoft Entra ID under “App registrations” and leave all settings at default. For our example the public key of the certificate and the MS Graph permissions are additionally required. The name is free. In my lab it is “AdminAutomationApp”.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_12.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_12.png" alt="StaledAutomation_12" /></a>
Create App registration with default settings</p>

<h3 id="import-certificate-public-key">Import certificate (public key)</h3>

<p>Once the app registration is created, we add the public key of the certificate we created and exported above (Win11 Client).</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_13.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_13.png" alt="StaledAutomation_13" /></a>
“Upload certificate” adds the public key of a certificate …</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_14.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_14.png" alt="StaledAutomation_14" /></a>
… to do this, specify the previously exported CER file for the “upload</p>

<h3 id="add-graph-permissions">Add Graph Permissions</h3>

<p>Then adjust the MS Graph permissions so that the list of permissions looks like this:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_15.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_15.png" alt="StaledAutomation_15" /></a>
App registration Graph Permissions</p>

<p>You will need the “Application ID” and the “Tenant ID” later for the variable values in the automation account. It is best to copy them into a text file.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_16.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_16.png" alt="StaledAutomation_16" /></a>
App registration Overview Page</p>

<h2 id="create-the-storage-account">Create the Storage Account</h2>

<p>At this point  the App registration setup is complete and we turn our attention to the Storage Account, which is used by the Runbook, to store the Excel file with the unused objects.</p>

<p>A Storage Account is a complex object, with multiple options and features. In our setup, it is used solely to create a container, similar to a folder in the file system, as a destination for the Excel file.</p>

<p><strong>➔ Note:</strong>
By the way, it is recommended to use the same Resource Group as for the Automation Account. If you only want to test the setup, it is sufficient to remove the Resource Group later to clean up the resources. However, this does not apply to the previously created App registration, this is independent of a Subscription and a Resource Group, because app registrations are located in Microsoft Entra ID.</p>

<p>So, moving on to the Storage Account:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_17.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_17.jpg" alt="StaledAutomation_17" /></a>
Startpage to create the Storage Account</p>

<!--
<figure>
  <img src="/MyPics/2023-08-22-StaledAutomation_17.jpg" style="width:100%">
  <figcaption>Figure 3: List with devices exported to Excel</figcaption>
</figure>
-->

<p>It is not necessary to show all the pages of the wizard that are needed to create a Storage Account in Azure. The two screenshots below summarize which options and settings work overall here.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_18.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_18.jpg" alt="StaledAutomation_18" /></a>
Summary of all values before creating the Storage Account (page 1)</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_19.jpg" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_19.jpg" alt="StaledAutomation_19" /></a>
Summary of all values before creating the Storage Account (page 2)</p>

<p>After creating the account, the overview page looks like this:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_20.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_20.png" alt="StaledAutomation_20" /></a>
Storage Account Overview Page</p>

<h3 id="add-the-container-to-the-storage-account">Add the container to the Storage Account</h3>

<p>As a final measure, you add a container to the Storage Account</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_21.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_21.png" alt="StaledAutomation_21" /></a>
Add Container to the Storage Account</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_22.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_22.png" alt="StaledAutomation_22" /></a>
Storage Account with the Container</p>

<p>Finally, let’s take a look at the access key of the Storage Account. We need the key for the variables in the Automation Account as well as for the access to the Storage Account in the Runbook. It’s best to copy it to a text file as well for later when you add the variables.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_23.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_23.png" alt="StaledAutomation_23" /></a>
Storage Account Access keys</p>

<p>Admittedly, there are more secure ways possible to handle the keys. Access keys should be stored in a secure place (Key Vault) and renewed from time to time. I’m deliberately not doing this in the example.</p>

<p>We switch back to the Automation Account in Azure. We now have everything together to create the variables.</p>

<p>So add the following variables to your account and make sure that the names of the variables match my ones shown here. Because this is how they will be referenced in the Powershell sequence for the runbook</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_24.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_24.png" alt="StaledAutomation_24" /></a>
List with variables</p>

<h2 id="add-runbook">Add Runbook</h2>

<p>Now we create the heart of the Automation account, the runbook of the “Type” Powershell.
The name is arbitrary</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_25.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_25.png" alt="StaledAutomation_25" /></a>
Create Runbook</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_26.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_26.png" alt="StaledAutomation_26" /></a>
View Runbooks in the Automation Account</p>

<p>When the runbook is created, select it and open the editor …</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_27.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_27.png" alt="StaledAutomation_27" /></a></p>

<p>… paste the Powershell sequence from my repository (<a href="https://github.com/KlaBier/Powershell/blob/main/AutomationRunbookLab/RunbookCode.ps1">link</a>) into the editor</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_28.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_28.png" alt="StaledAutomation_28" /></a>
Powershell editor in the Azure Portal</p>

<p>Customize the PowerShell elements to your needs or leave them as you find them in my repository. When you are done in the PowerShell editor, it is advisable to run a test using “Test Pane” (1). Only then you can publish the runbook (2). As long as the runbook has not been published in the Automation Account, you cannot set up an appropriate schedule.
If all the required variables are present and the App registration and Storage Account have been created according to the instructions, the screen should look something like this after a test run:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_29.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_29.png" alt="StaledAutomation_29" /></a>
Testrun</p>

<p>In case of discrepancies, the error messages are usually self-explanatory. An error analysis should not be too much of a hurdle, since these are probably typos or something similar.
The screen log is longer than visible here. Error messages may be outside the window content. You can scroll up in the output area and see if an error was logged anywhere. 
It can be misleading that “Completed” is always displayed in green, even if there are indications of an error outside the output window and thus the “Status” is not green at all.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_30.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_30.png" alt="StaledAutomation_30" /></a>
Error while testing the Powershell runbook</p>

<h3 id="show-results">Show results</h3>

<p>If everything fits, the container of the Storage Account should contain the desired Excel file.</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_31.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_31.png" alt="StaledAutomation_31" /></a>
Storage Account and Excel file</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_32.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_32.png" alt="StaledAutomation_32" /></a>
List of unused user accounts</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_33.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_33.png" alt="StaledAutomation_33" /></a>
List of unused computer accounts</p>

<p>Finally, you need to add a schedule and assign it to the runbook. This step is largely self-explanatory</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_34.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_34.png" alt="StaledAutomation_34" /></a>
Planned schedule</p>

<p>What I find particularly powerful and worth mentioning here is the ability to keep multiple schedules in an Automation Account to allow for maximum flexibility in execution.</p>

<p>However the runbook is executed, it does not matter whether manually, as described above in the test, or via a schedule. You will receive an Excel file after each execution with the execution timestamp in the file name.</p>

<p>The runbook will finally look like this in the Automation Account:</p>

<p class="figcaption"><a href="/MyPics/2023-08-22-StaledAutomation_35.png" target="_blank"><img src="/MyPics/2023-08-22-StaledAutomation_35.png" alt="StaledAutomation_35" /></a>
Overview page of the completed runbook</p>

<p><strong>➔ Conclusion:</strong>
An Automation Account offers numerous design options. My example shows some of the many options that Automation offers. The limits here are the imagination of the administrator.</p>

<p>Why not create a new runbook in the Automation Account that takes the Excel file and deactivates computer accounts directly or deletes them every six months? Something similar can be implemented with user accounts.</p>

<p>I wish you success in administratively dealing with unused identities and with the setup described here.</p>

<p>Feel free to contact me for an exchange or if you have feedback.</p>

<p>Last but not least, the following Microsoft article is recommended:
(<a href="https://learn.microsoft.com/en-us/azure/automation/automation-runbook-execution">Runbook execution in Azure Automation</a>)</p>

<p>Cover image Niran Kasri from Pixabay</p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2023-08-22-StaledAutomation/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2023-08-22-StaledAutomation/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2023-08-22-StaledAutomation/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name>Klaus Bierschenk</name></author><summary type="html"><![CDATA[Niran Kasri auf Pixabay]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2023-08-22-StaledAutomation_Cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2023-08-22-StaledAutomation_Cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The dilemma with unused objects in Azure AD</title><link href="http://localhost:4000/2023-03-22-FindStaledObjectsInAAD/" rel="alternate" type="text/html" title="The dilemma with unused objects in Azure AD" /><published>2023-03-22T09:00:32+01:00</published><updated>2023-03-31T12:03:51+02:00</updated><id>http://localhost:4000/FindStaledObjectsInAAD</id><content type="html" xml:base="http://localhost:4000/2023-03-22-FindStaledObjectsInAAD/"><![CDATA[<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_Cover.jpg" style="width:75%" />
  <figcaption>mohamed_hassan auf Pixabay</figcaption>
</figure>

<ul id="markdown-toc">
  <li><a href="#overview" id="markdown-toc-overview">Overview</a>    <ul>
      <li><a href="#device-objects" id="markdown-toc-device-objects">Device objects</a>        <ul>
          <li><a href="#azure-ad-dashboard" id="markdown-toc-azure-ad-dashboard">Azure AD Dashboard</a></li>
          <li><a href="#powershell-examples" id="markdown-toc-powershell-examples">Powershell examples</a></li>
        </ul>
      </li>
      <li><a href="#identifying-unused-user-accounts" id="markdown-toc-identifying-unused-user-accounts">Identifying unused user accounts</a>        <ul>
          <li><a href="#azure-ad-dashboard-1" id="markdown-toc-azure-ad-dashboard-1">Azure AD Dashboard</a></li>
        </ul>
      </li>
      <li><a href="#powershell-vs-graph-api" id="markdown-toc-powershell-vs-graph-api">Powershell vs. Graph API</a>        <ul>
          <li><a href="#access-reviews-zum-ermitteln-unbenutzter-konten" id="markdown-toc-access-reviews-zum-ermitteln-unbenutzter-konten">Access Reviews zum Ermitteln unbenutzter Konten</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#deutsche-version" id="markdown-toc-deutsche-version">Deutsche Version</a>    <ul>
      <li><a href="#übersicht" id="markdown-toc-übersicht">Übersicht</a>        <ul>
          <li><a href="#computerkonten" id="markdown-toc-computerkonten">Computerkonten</a>            <ul>
              <li><a href="#azure-ad-dashboard-2" id="markdown-toc-azure-ad-dashboard-2">Azure AD Dashboard</a></li>
              <li><a href="#powershell-beispiele" id="markdown-toc-powershell-beispiele">Powershell Beispiele</a></li>
            </ul>
          </li>
          <li><a href="#ermitteln-unbenutzter-benutzkonten" id="markdown-toc-ermitteln-unbenutzter-benutzkonten">Ermitteln unbenutzter Benutzkonten</a>            <ul>
              <li><a href="#azure-ad-dashboard-3" id="markdown-toc-azure-ad-dashboard-3">Azure AD Dashboard</a></li>
            </ul>
          </li>
          <li><a href="#powershell-vs-graph-api-1" id="markdown-toc-powershell-vs-graph-api-1">Powershell vs. Graph API</a>            <ul>
              <li><a href="#access-reviews-zum-ermitteln-unbenutzter-konten-1" id="markdown-toc-access-reviews-zum-ermitteln-unbenutzter-konten-1">Access Reviews zum Ermitteln unbenutzter Konten</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="overview">Overview</h2>
<p>It is very easy to add new users or computer objects in Azure Active Directory. Depending on the tenant settings, this can also be done quite extensively by end users themselves. Invited guest users 
or BYOD scenarios, for example. This is very convenient and timely in terms of user experience, but brings the disadvantage that over time more and more unused identities accumulate, which may no longer be needed. Guest user accounts that were used by external project members during a project, but have been forgotten afterwards. The same is true for devices registered in Azure AD. Registration is easy, even for end users, but “out of the box” no mechanism in Azure AD ensures that device objects that are no longer used are removed as silently as they were added. Smartphones, computers are swapped or lost and users soon use another device for their work. The administrator has to keep an eye on it himself, either manually and on a regular basis, as part of various “housekeeping” activities that ensure good hygiene in the tenant, or the Admin establishes automatisms that generate reports of unused objects.</p>

<p>Whatever the reason for these holdovers, they are unnecessary and pose a security risk.</p>

<h3 id="device-objects">Device objects</h3>
<p>In the best case, devices should be de-registered again via a lifecycle process, for example when a device is replaced. Or if a user reports a device as lost. Companies that use mobile device management (e.g., Microsoft Intune) can define policies that react in various ways to device objects that are no longer in use, such as deactivating or deleting them directly.</p>

<p>Each time a user accesses a cloud application with his device, the attribute “ApproximateLastLogonTimestamp” is provided with the current timestamp. Using the delta from today to the last time used, it is easy to find out when the device was last used against the tenant.</p>

<h4 id="azure-ad-dashboard">Azure AD Dashboard</h4>

<p>This is very easy to do in the Azure AD Dashboard and the filter options there in the view of the devices.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_7.png" style="width:100%" />
  <figcaption>Figure 1: Devices in the Dashboard with a predefined "Stale devices" view</figcaption>
</figure>

<p>This is helpful to look for individual devices or also with a smaller number of devices.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_1.png" style="width:100%" />
  <figcaption>Figure 2: List with devices in the Azure AD Dashboard</figcaption>
</figure>

<p>With a high number of objects, however, this is hardly possible without the Powershell.</p>

<h4 id="powershell-examples">Powershell examples</h4>
<p>Here, a list can be generated in no time at all, which can be sent by mail or otherwise serve as a basis for cleanup work. The starting point for this is the cmdlet</p>

<p class="text-center"><code class="language-plaintext highlighter-rouge">Get-AzureADDevice</code></p>

<p>For example, a list with all devices can be created like this</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-AzureADDevice</span><span class="w"> </span><span class="nt">-All</span><span class="p">:</span><span class="bp">$true</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">select-object</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="nx">AccountEnabled</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceId</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceOSType</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceOSVersion</span><span class="p">,</span><span class="w"> </span><span class="nx">DisplayName</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceTrustType</span><span class="p">,</span><span class="w"> </span><span class="nx">ApproximateLastLogonTimestamp</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Format-Table</span><span class="w"> 
</span></code></pre></div></div>

<p>Some examples how to filter the output for a certain period of time and how to generate an Excel list directly can be found in <a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">my Powershell repository</a></p>

<p>The result in Excel looks like this:</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_2.png" style="width:100%" />
  <figcaption>Figure 3: List with devices exported to Excel</figcaption>
</figure>

<p>With this list it is easy to implement a reaction to these detected devices, best also directly via Powershell. But be careful with deleting device objects. There is no recycle bin here from which objects can be recycled, as is the case with user objects, for example. Also, the Bitlocker Keys of the respective device are stored in Azure AD. These are lost when an object is deleted.</p>

<p>It should also be noted that a distinction is made between Hybrid AAD Joined, AAD Joined and AAD Registered for the devices. When deleting from the AAD, the state on the respective device is not changed. Depending on which type of registration the device has, different aspects are significant here. This only applies to cases where devices may still be in use. Microsoft provides some Docs articles that describe what the differences are and what to look out for.</p>

<p>Every company should have a policy that describes how unused device objects are handled:</p>
<ul>
  <li>what is the time period after which a device is considered a stale device?</li>
  <li>Is Bitlocker used? Are the keys no longer needed or do recovery keys exist?</li>
  <li>
    <p>A two-step process is suitable for removing unused devices from a tenant:</p>

    <ul>
      <li>Step1: Deactivation of the device.</li>
      <li>Step2: final deletion of the device after a defined period of time.</li>
    </ul>
  </li>
</ul>

<h3 id="identifying-unused-user-accounts">Identifying unused user accounts</h3>
<p>Even more critical than device objects are orphaned user accounts. These are easier to abuse and they come with permissions and roles.</p>

<h4 id="azure-ad-dashboard-1">Azure AD Dashboard</h4>
<p>The Azure AD User Dashboard is only partially suitable for an investigation of identities that are no longer used. If it does get used, the column with the last login time must be part of the view. This is not visible by default. It can be easily added via “Manage view”. After that, filtering and customizing the view can be done to the best of your ability.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_3.png" style="width:100%" />
  <figcaption>Figure 4: Azure AD Dashboard showing device objects</figcaption>
</figure>

<h3 id="powershell-vs-graph-api">Powershell vs. Graph API</h3>
<p>To get information about the last logon time via script, we have to take a little detour. This is not quite as simple for users as shown above for devices, or as it may also be known from ADDS On-Premises via the property “LastLogonTimestamp”. At least in Azure AD it does not work directly with the “Get-AzureADUser” cmdlet because the “lastSignInDateTime” property is not stored with the user object. We get this information through the signInActivity recource type of the Graph API. For this to work well graph permissions are necessary. What these are, and what other dependencies there are, is described by Microsoft in this <a href="https://learn.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-manage-inactive-user-accounts">article</a></p>

<p>The following cmdlets show how to access user information:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Login/Connect</span><span class="w">
</span><span class="n">Connect-MgGraph</span><span class="w"> </span><span class="nt">-Scopes</span><span class="w"> </span><span class="s1">'User.Read.All'</span><span class="p">,</span><span class="w"> </span><span class="s2">"Auditlog.Read.All"</span><span class="w">

</span><span class="c"># Get list with all users</span><span class="w">
</span><span class="n">Get-MgUser</span><span class="w"> </span><span class="nt">-All</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Format-Table</span><span class="w">  </span><span class="nx">ID</span><span class="p">,</span><span class="w"> </span><span class="nx">DisplayName</span><span class="p">,</span><span class="w"> </span><span class="nx">Mail</span><span class="p">,</span><span class="w"> </span><span class="nx">UserPrincipalName</span><span class="w">
</span></code></pre></div></div>

<p>The result will look like this, for example:</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_4.bmp" style="width:100%" />
  <figcaption>Figure 5: List device objects with Powershell</figcaption>
</figure>

<p>More comprehensive options like filtering, or exporting users who last logged in before a certain date, I have also in my <a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">Powershell Repository </a></p>

<h4 id="access-reviews-zum-ermitteln-unbenutzter-konten">Access Reviews zum Ermitteln unbenutzter Konten</h4>
<p>Access Reviews are also a possibility to detect inactive users and to delete them automatically after a certain period of time. With the intervention of an administrator (approval) or without. Only for guest users or for all user accounts. So even those that are not external. All this and more can be done with Access Reviews. So you already have all the stuff that you need to build when you use Powershell. You get along completely without code. This sounds very tempting and indeed I recommend to look into this possibility if not already done.
Access Reviews have been around for a while. They were introduced at the time to review memberships in groups or to review and renew or revoke access to applications if necessary. Newly added in May 2022(<a href="https://techcommunity.microsoft.com/t5/microsoft-entra-azure-ad-blog/review-and-remove-aad-inactive-users-in-public-preview/ba-p/3290632">Link</a>) the described possibility to identify unused user activities.</p>

<p>The following figure shows the elementary part of an access review that defines a target, in this case guest accounts.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_5.png" style="width:100%" />
  <figcaption>Figure 6: Access Reviews to find unused User Objects</figcaption>
</figure>

<p>By the way, besides the direct assignment of “Approvers”, it is possible to specify that automatically the respective manager of the user account or the owner of the respective group that is in review becomes Approver. There is also the possibility to define multiple approvers, who can reassign previously reviewed decisions, etc. And since it can also be that employees need to edit the results of an Access Review, but for security reasons are not allowed to have access to the Azure AD portal (project office employees, for example), there is the possibility to display the Access Reviews and administer the results via “myaccess.microsoft.com”. This is perfect in times of Zero Trust.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_6.png" style="width:100%" />
  <figcaption>Figure 7: "mayaccess" website for non admins to administer Access Reviews</figcaption>
</figure>

<p>We’ve only scratched the surface here on what Access Reviews can do. Microsoft has good articles in Microsoft Docs that describe Access Reviews in detail, including videos. With the appropriate keyword search you will quickly find what you are looking for. Have fun trying it out 😀</p>

<h1 id="deutsche-version">Deutsche Version</h1>

<h2 id="übersicht">Übersicht</h2>
<p>Es ist sehr einfach im Azure Active Directory neue Benutzer oder Computerobjekte hinzuzufügen. Je nach Tenant Einstellungen können dies auch recht umfangreich Endbenutzer selbst bewerkstelligen. Eingeladene Gastbenutzer 
oder BYOD Szenarien beispielsweise. Das ist im Sinne der Benutzererfahrung sehr komfortabel und zeitgemäß, bringt aber den Nachteil mit sich, das im Laufe der Zeit mehr und mehr ungenutzte Identitäten ansammeln, die evtl. nicht mehr benötigt werden. Gastbenutzerkonten, die während eines Projektes von externen Projektmitarbeitern genutzt wurden, danach aber in Vergessenheit geraten sind. Das gleiche gilt für im Azure AD registrierte Geräte. Die Registrierung ist einfach, auch für Endbenutzer, aber “out of the box” sorgt kein Mechanismus im Azure AD dafür, das nicht mehr benutzte Geräteobjekte so geräuschlos entfernt werden, wie sie hinzugefügt wurden. Smartphones, Computer werden getauscht oder gehen verloren und Anwender benutzen alsbald ein anderes Gerät für ihre Arbeit. Der Administrator muss selber ein Auge darauf werfen, sei es manuell und turnusmäßig, als Teil von diversen “Housekeeping” Aktivitäten, die für eine gute Hygiene im Tenant sorgen, oder er etabliert Automatismen, die Reports unbenutzter Objekte generieren.</p>

<p>Was auch immer der Grund für diese Überbleibsel ist, sie sind überflüssig und stellen ein Sicherheitsrisiko dar.
Schauen wir uns einige Möglichkeiten an, wie sich damit umgehen lässt</p>

<h3 id="computerkonten">Computerkonten</h3>
<p>Im besten Fall sollten Geräte über einen Lifecycle Prozess wieder de-regestriert werden, zum Beispiel bei einem Gerätetausch. Oder sei es, dass ein Anwender ein Gerät als verloren meldet. Unternehmen, die ein “Mobile Device Management” (z.B. Microsoft Intune) einsetzen, können hierfür Policies definieren, die verschiedenartig auf nicht mehr benutzte Geräteobjekte reagieren, diese beispielsweise deaktivieren oder direkt löschen.</p>

<p>Jedes mal wenn ein Anwender mit seinem Gerät auf eine Cloud Anwendung zugreift, wird das Attribut “ApproximateLastLogonTimestamp” mit dem aktuellen Zeitstempel versehen. Über das Delta von heute zu dem letzten verwendeten Zeitpunkt ist es leicht herauszufinden, wann das Gerät zuletzt gegen den Tenant benutzt wurde.</p>

<h4 id="azure-ad-dashboard-2">Azure AD Dashboard</h4>

<p>Sehr einfach geht das im Azure AD Dashboard und den dortigen Filtermöglichkeiten in der Ansicht der Geräte.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_7.png" style="width:100%" />
  <figcaption>Figure 1: Devices in the Dashboard with a predefined "Stale devices" view</figcaption>
</figure>

<p>Das ist hilfreich um nach einzelnen Geräten zu schauen oder auch bei einer geringeren Anzahl an Devices.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_1.png" style="width:100%" />
  <figcaption>Figure 2: List with devices in the Azure AD Dashboard</figcaption>
</figure>

<p>Bei einer hohen Anzahl an Objekten geht dies aber kaum ohne die Powershell.</p>

<h4 id="powershell-beispiele">Powershell Beispiele</h4>
<p>Hier lässt sich im Handumdrehen eine Liste generieren, die per Mail verschickt oder anderweitig als Grundlage für Aufräumarbeiten dienen kann. Ausgangspunkt hierfür ist das Cmdlet</p>

<p class="text-center"><code class="language-plaintext highlighter-rouge">Get-AzureADDevice</code></p>

<p>Eine Liste mit allen Geräten lässt sich zum Beispiel so erstellen</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-AzureADDevice</span><span class="w"> </span><span class="nt">-All</span><span class="p">:</span><span class="bp">$true</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">select-object</span><span class="w"> </span><span class="nt">-Property</span><span class="w"> </span><span class="nx">AccountEnabled</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceId</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceOSType</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceOSVersion</span><span class="p">,</span><span class="w"> </span><span class="nx">DisplayName</span><span class="p">,</span><span class="w"> </span><span class="nx">DeviceTrustType</span><span class="p">,</span><span class="w"> </span><span class="nx">ApproximateLastLogonTimestamp</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Format-Table</span><span class="w"> 
</span></code></pre></div></div>

<p>Einige Beispiele wie sich die Ausgabe für ein bestimmten Zeitraum filtern lässt und wie direkt eine Excelliste generiert wird habe ich <a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">hier zusammengestellt. </a></p>

<p>Das Ergebnis in Excel sieht dann beispielsweise so aus:</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_2.png" style="width:100%" />
  <figcaption>Figure 3: List with devices exported to Excel</figcaption>
</figure>

<p>Mit dieser Liste ist es einfach eine Reaktion auf diese ermittelten Geräte zu implementieren, am besten auch direkt per Powershell. Aber Vorsicht mit dem Löschen von Geräteobjekten. Es gibt hier keinen Papierkorb, aus dem sich Objekte recyclen lassen, wie dies  beispielsweise bei Benutzerobjekten der Fall ist. Auch werden die Bitlocker Keys des jeweiligen Geräters im Azure AD gespeichert. Diese sind verloren, wenn ein Objekt gelöscht wird.</p>

<p>Zu beachten ist noch, dass bei den Geräten unterschieden wird zwischen Hybrid AAD joined, AAD Joined und AAD Registered. Beim Löschen aus dem AAD wird der Zustand auf dem jeweiligen Gerät nicht geändert. Je nach dem welche Art der Registrierung das Gerät hat, sind hier verschiedene Aspekte bedeutend. Dies betrifft nur die Fälle, in denen Geräte eventuell doch noch benutzt werden. Microsoft liefert einige Docs Artikel, die Beschreiben worin die Unterschiede liegen und worauf dabei zu achten ist.</p>

<p>Jedes Unternehmen sollte eine Richtlinie haben, die beschreibt wie mit ungenutzten Geräteobjekten umgegangen wird:</p>
<ul>
  <li>was ist der Zeitraum, ab dem ein Gerät als Staled Device gilt?</li>
  <li>kommt Bitlocker zum Einsatz? Werden die Keys nicht mehr benötigt oders existieren Recovery Keys?</li>
  <li>
    <p>zum Entfernen ungenutzter Geräte aus einem Tenant eignet sich ein zweistufiger Prozess:</p>

    <ul>
      <li>Step1: Deaktivieren des Gerätes.</li>
      <li>Step2: endgültiges Löschen des Gerätes nach einem definierten Zeitraum.</li>
    </ul>
  </li>
</ul>

<h3 id="ermitteln-unbenutzter-benutzkonten">Ermitteln unbenutzter Benutzkonten</h3>
<p>Noch kritischer als bei den Geräteobjekten sind verwaiste Benutzerkonten. Diese sind einfacher zu missbrauchen und sie sind mit Berechtigungen und Rollen ausgestattet.</p>

<h4 id="azure-ad-dashboard-3">Azure AD Dashboard</h4>
<p>Das Azure AD User Dashboard eignet sich nur bedingt für eine Untersuchung von nicht mehr genutzten Identitäten. Wenn es doch eingesetzt wird, muss die Spalte mit dem letzten Anmeldezeitpunkt Teil der Ansicht sein. Diese ist standardmäßig nicht sichtbar. Sie lässt sich einfach über “Manage view” hinzufügen. Danach kann nach Kräften gefiltert und die Ansicht angepasst werden.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_3.png" style="width:100%" />
  <figcaption>Figure 4: Azure AD Dashboard showing device objects</figcaption>
</figure>

<h3 id="powershell-vs-graph-api-1">Powershell vs. Graph API</h3>
<p>Um Informationen über den letzten Anmeldezeitpunkt per Script zu erhalten, müssen wir einen kleinen Umweg wählen. Das geht bei Benutzern nicht ganz so einfach wie oben bei den Geräten gezeigt, oder wie es eventuell auch vom ADDS On-Premises über die Eigenschaft “LastLogonTimestamp” bekannt ist. Zumindest geht es im Azure AD nicht direkt mit dem Cmdlet “Get-AzureADUser”, da die Eigenschaft “lastSignInDateTime” nicht beim Benutzerobjekt gespeichert wird. Diese Informationen erhalten wir über den signInActivity recource type der Graph API. Damit dies gut funktioniert sind Graph Berechtigungen notwendig. Welche das sind, und welche weiteren Abhängigkeiten es gibt, beschreibt Microsoft in diesem  <a href="https://learn.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-manage-inactive-user-accounts">Beitrag</a></p>

<p>Folgende Cmdlets zeigen den Zugriff auf Benutzerinformationen:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Login/Connect</span><span class="w">
</span><span class="n">Connect-MgGraph</span><span class="w"> </span><span class="nt">-Scopes</span><span class="w"> </span><span class="s1">'User.Read.All'</span><span class="p">,</span><span class="w"> </span><span class="s2">"Auditlog.Read.All"</span><span class="w">

</span><span class="c"># Get list with all users</span><span class="w">
</span><span class="n">Get-MgUser</span><span class="w"> </span><span class="nt">-All</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Format-Table</span><span class="w">  </span><span class="nx">ID</span><span class="p">,</span><span class="w"> </span><span class="nx">DisplayName</span><span class="p">,</span><span class="w"> </span><span class="nx">Mail</span><span class="p">,</span><span class="w"> </span><span class="nx">UserPrincipalName</span><span class="w">
</span></code></pre></div></div>

<p>Das Ergebnis sieht dann beispielsweise so aus:</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_4.bmp" style="width:100%" />
  <figcaption>Figure 5: List device objects with Powershell</figcaption>
</figure>

<p>Umfassendere Möglichkeiten wie Filterung, oder den Export von Benutzern, die sich vor einem bestimmten Datum zuletzt angemeldet haben, habe ich in meinem <a href="https://github.com/KlaBier/Powershell/tree/main/FindUnusedObjects">Powershell Repository </a></p>

<h4 id="access-reviews-zum-ermitteln-unbenutzter-konten-1">Access Reviews zum Ermitteln unbenutzter Konten</h4>

<p>Access Reviews sind ebenfalls eine Möglichkeit inaktive Benutzer aufzusprüren und diese automatisch nach einer gewissen Zeitspanne zu löschen. Mit Zutun eines Administrators (Approval) oder ohne. Nur für Gastbenutzer oder für sämtliche Benutzerkonten. Also auch diejenigen, die nicht extern sind. All das und mehr lässt sich mit Access Reviews bewerkstelligen. Sie bringen also das ganze Drumherum bereits mit, dass bei Vorgehensweise über die Powershell erst zu bauen ist. Sie kommen komplett ohne Code aus. Das klingt sehr verlockend und in der Tat empfehle ich sich mit dieser Möglichkeit auseinanderzusetzen, wenn noch nicht geschehen.
Access Reviews gibt es schon länger. Sie wurden seinerzeit eingeführt um Mitgliedschaften in Gruppen oder um den Zugriff auf Anwendungen zu prüfen und gegebenenfalls zu verlängern oder zu entziehen. Neu hinzugekommen ist im Mai 2022 ( <a href="https://techcommunity.microsoft.com/t5/microsoft-entra-azure-ad-blog/review-and-remove-aad-inactive-users-in-public-preview/ba-p/3290632">Link</a>) die beschriebene Möglickeit ungenutzte Benuterzeraktivitäten zu ermitteln.</p>

<p>Nachfolgende Abbildung zeigt den elementaren Teil eines Access Reviews der ein Ziel definiert, in dem Fall Gastkonten.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_5.png" style="width:100%" />
  <figcaption>Figure 6: Access Reviews to find unused User Objects</figcaption>
</figure>

<p>Übrigens lässt sich neben dem direkten Zuweisen von “Approvern” angeben, dass automatisch der jeweilige Manager des Benutzerkontos oder der Owner der jeweiligen Gruppe, die im Review ist, zu Approver werden. Es besteht auch die Möglichkeit mehrere Genehmiger zu hinterlegen, die zuvor geprüfte Entscheidungen neu treffen können usw. Und da es auch sein kann, das Mitarbeiter die Ergebnisse eines Access Reviews bearbeiten müssen, die aber aus Gründen der Sicherheit keinen Zugriff auf das Azure AD Portal haben dürfen(Projektofficemitarbeiter z.B.), besteht die Möglichkeit über myaccess.microsoft.com die Access Reviews anzuzeigen und die Ergebnisse zu administrieren. Das ist absolut zeitgemäß in Zeiten von Zero Trust.</p>

<figure>
  <img src="/MyPics/2023-03-22-FindStaledObjectsInAAD_6.png" style="width:100%" />
  <figcaption>Figure 7: "mayaccess" website for non admins to administer Access Reviews</figcaption>
</figure>

<p>Wir haben hier nur an der Oberfläche gekratzt, bei den Möglichkeiten, die Access Reviews bieten. Microsoft hat in Microsoft Docs gute Artikel die Access Reviews im Detail beschreiben, auch Videos. Mit entsprechender Schlagwortsuche wirst du dort schnell fündig. Viel Spaß beim Ausprobieren 😀</p>

<p>Cover image Mohamed Hassan from Pixabay</p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2023-03-22-FindStaledObjectsInAAD/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2023-03-22-FindStaledObjectsInAAD/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2023-03-22-FindStaledObjectsInAAD/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name>Klaus Bierschenk</name></author><summary type="html"><![CDATA[mohamed_hassan auf Pixabay]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2023-03-22-FindStaledObjectsInAAD_Cover.jpg" /><media:content medium="image" url="http://localhost:4000/MyPics/2023-03-22-FindStaledObjectsInAAD_Cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Check your Azure AD for expiring App Secrets</title><link href="http://localhost:4000/2023-01-07-GetSecretInfos/" rel="alternate" type="text/html" title="Check your Azure AD for expiring App Secrets" /><published>2023-01-07T10:00:32+01:00</published><updated>2023-03-29T22:51:19+02:00</updated><id>http://localhost:4000/GetSecretInfos</id><content type="html" xml:base="http://localhost:4000/2023-01-07-GetSecretInfos/"><![CDATA[<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_Cover.jpg" style="width:75%" />
<!--  <figcaption>Figure 1: This can be any text here</figcaption> -->
</figure>

<ul id="markdown-toc">
  <li><a href="#english-version" id="markdown-toc-english-version">English version</a>    <ul>
      <li><a href="#in-general" id="markdown-toc-in-general">In general</a></li>
      <li><a href="#challenge-with-client-secrets" id="markdown-toc-challenge-with-client-secrets">Challenge with Client Secrets</a></li>
    </ul>
  </li>
  <li><a href="#beitrag-in-deutsch" id="markdown-toc-beitrag-in-deutsch">Beitrag in Deutsch</a>    <ul>
      <li><a href="#grundlegendes" id="markdown-toc-grundlegendes">Grundlegendes</a></li>
      <li><a href="#herausforderung-bei-client-secrets" id="markdown-toc-herausforderung-bei-client-secrets">Herausforderung bei Client Secrets</a></li>
    </ul>
  </li>
</ul>

<h1 id="english-version">English version</h1>
<p>To enable app registrations to authenticate themselves to other services, they have the option of adding credentials to them. Either certificates or so-called client secrets are used. Federated credentials are also possible, but the first two are probably the most common in my experience.</p>

<p>Microsoft recommends certificates. These offer higher security compared to Client Secrets. A Secret is basically nothing more than an “application password”, with all the uncertainties that come with passwords. They are hard-coded into applications, posted in MS Teams chats, or sent by mail. In times of zero trust, you really don’t want that anymore.</p>
<h2 id="in-general">In general</h2>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_I.png" style="width:100%" />
  <figcaption>App Registration Dashboard - showing a Secret</figcaption>
</figure>

<p>So, Microsoft’s recommendation to prefer certificates is understandable. In my practice, however, I often see the use of client secrets. Not surprisingly, after all, they are quick and easy to set up and available in no time.
Microsoft offers a wealth of Docs articles that address the authentication of App Registrations. To describe the topic here again in my own words makes little sense. Rather, I feel it is important to point out a particular circumstance that Microsoft does not address in the docs in this way, but which I encounter frequently in practice and which we will now look at.</p>

<h2 id="challenge-with-client-secrets">Challenge with Client Secrets</h2>
<p>Besides the mentioned disadvantages of passwords, there is a serious disadvantage of Client Secrets. The maximum validity period can individually specified and it has a maximum of 24 months. This is configured when the secret is created. Unfortunately, there is no possibility to inform the owner of the app registration or other mail addressees when the validity period of a client secret is about to end. This would leave time to generate a new one and integrate the new password (the secret) for example on a web page or in the code.</p>

<p>In practice, this means that a secret is configured for an app registration and is logically forgotten. At some point, the validity of the secret ends and an application that used to work suddenly stops working. The search continues until the evil is finally found. And on top of that, it’s urgent, because the application is definitely no longer working as it should.</p>

<p>Let’s hope that Microsoft will soon integrate the possibility of a notification, similar to the SAML certificate for an enterprise application.</p>

<p>If the threat is known, it can be dealt with in advance in various ways, for example, a SIEM can keep an eye on the expiration dates of the Secrets.</p>

<p>In case this is not available, it might make sense to create an old-fashioned CSV file that generates a list of all app registrations in the tenant. Act instead of react is the motto here. For my activities in the field, I have a small Powershell script that creates two CSV text files:</p>

<p>(a) list with all App Registrations, all Owners and then again per Owner all Secrets.
This is redundant in terms of information, but if the CSV file is imported into Excel, there is a good possibility of filtering in many ways.</p>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_II.png" style="width:100%" />
  <figcaption>Imported CSV with all App Regs, their Secrets and "one" Owner</figcaption>
</figure>

<p>b) A list of all app registrations and all secrets. In this case, however, only one owner.</p>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_III.png" style="width:100%" />
  <figcaption>Imported CSV with all App Regs, their Secrets and "all" Owner</figcaption>
</figure>

<p>It may make sense to regularly create these lists as part of an operational manual, when no other monitoring is available, to see what is happening here with expiring Secrets.</p>

<p>The script is primarily intended as an illustrative material. It is possible to extend it in many ways and to adapt it to your own needs. The integration into an automation runbook, into a logic app with resulting mail dispatch to the mail addresses of the listed owners are only a few examples.</p>

<p>Please find the Powershell Script here: <a href="https://github.com/KlaBier/Powershell">Script </a></p>

<h1 id="beitrag-in-deutsch">Beitrag in Deutsch</h1>
<h2 id="grundlegendes">Grundlegendes</h2>
<p>Damit App Registrations sich gegenüber anderen Diensten authentifizieren können, verfügen sie über die Möglichkeit ihnen Credentials hinzuzufügen. Dabei kommen entweder Zertifikate zum Einsatz oder sogenannte Client Secrets. Federated Credentials sind ebenfalls möglich, aber die beiden erstgenannten sind nach meiner Erfahrung wohl die am gebräuchlichsten.</p>

<p>Microsoft empfiehlt Zertifikate. Diese bieten höhere Sicherheit gegenüber den Client Secrets. Ein Secret ist im Grunde genommen nichts anderes als ein “Applicationspassword”, mit allen Unsicherheiten, die es im Zusammenhang mit Passwörtern gibt. Sie werden in Anwendungen hart codiert eingefügt, in MS Teams Chats geposted oder per Mail versendet. Das möchte man in Zeiten von Zero Trust eigentlich nicht mehr haben.</p>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_I.png" style="width:100%" />
  <figcaption>App Registration Dashboard - einzelnes Secret</figcaption>
</figure>

<p>Also, Microsofts Empfehlung, Zertifikate vorzuziehen, ist nachvollziehbar. In meiner Praxis erlebe ich aber häufig die Verwendung von Client Secrets. Wen wundert es, schließlich sind diese schnell und unkompliziert angelegt und im Nullkommanix verfügbar.
Microsoft bietet eine Fülle an Docs Artikeln, die die Authentifizierung von App Registrations thematisieren. Das Thema hier mit meinen Worten erneut zu beschreiben, macht wohl wenig Sinn. Mir ist es vielmehr wichtig auf einen besonderen Umstand hinzuweisen, den Microsoft so nicht in den Beiträgen thematisiert, der mir aber in der Praxis häufig begegnet und den wie wir uns jetzt anschauen.</p>

<h2 id="herausforderung-bei-client-secrets">Herausforderung bei Client Secrets</h2>
<p>Neben den genannten Nachteilen von Passwörtern gibt es einen gravierenden Nachteil von Client Secrets. Die maximale Gültigkeitsdauer eines manuell hinzugefügten Secrets liegt bei 24 Monaten. Diese wird angegeben, wenn das Secret erstellt wird. Leider besteht nicht die Möglichkeit den Owner der App Registration oder andere Mailadressaten darüber zu informieren, wenn der Zeitraum für die Gültigkeit eines Client Secret alsbald endet. Somit bliebe Zeit einen neuen zu generieren und das neue Passwort (den Secret) beispielsweise auf einer Webseite oder im Code zu integrieren.</p>

<p>In der Praxis sieht das dann oft so aus, dass ein Secret für eine App Registration konfiguriert ist und logischerweise in Vergessenheit gerät. Irgendwann endet dann die Gültigkeit und eine Anwendung, die bislang funktionierte, funktioniert plötzlich nicht mehr. Die Sucherei geht los, bis das Übel endlich gefunden ist. Und obendrein ist Eile ist geboten, da die Anwendung definitiv nicht mehr funktioniert, wie sie sollte.</p>

<p>Bleibt zu hoffen, dass Microsoft hier bald die Möglichkeit einer Benachrichtigung integriert, ähnlich wie dies beispielsweise bei einem SAML Zertifikat für eine Enterprise Application der Fall ist</p>

<p>Wenn man die drohende Gefahr kennt, lässt sich im Vorfeld verschiedenartig damit umgehen, beispielsweise kann ein SIEM ein Auge auf die Ablaufdaten der Secrets werfen.</p>

<p>Für den Fall, das dies nicht vorhanden ist, kann aber eventuell das Erstellen einer altmodische CSV-Datei Sinn machen, die eine Liste aller App Registrations im Tenant generiert. Agieren statt regieren ist hier die Devise. Aus meiner täglichen Arbeit habe ich ein kleines Powershell Script, das zwei CSV-Textdateien erstellt:</p>

<p>a)  Liste mit allen App Registrations, allen Ownern und dann wiederum pro Owner alle Secrets
Das ist von den Infos her gesehen zwar redundant, aber wird die CSV-Datei in Excel importiert, besteht so eine gute Möglichkeit der Filterung in vielerlei Ausprägung</p>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_II.png" style="width:100%" />
  <figcaption>Importierte CSV-Datei mit allen Secrets und "einem" Owner</figcaption>
</figure>

<p>b) Eine Liste aller App Registrations und allen Secrets. In diesem Fall aber nur ein Owner.</p>

<figure>
  <img src="/MyPics/2023-01-07-GetSecretInfos_III.png" style="width:100%" />
  <figcaption>Importierte CSV-Datei mit allen Secrets und "allen" Ownern</figcaption>
</figure>

<p>Es kann Sinn machen regelmäßig diese Listen dokumentiert als Teil eines Betriebshandbuches für das Azure AD zu erstellen, wenn keine weitere Überwachung verfügbar ist, um zu sehen was der Status in Bezug auf ablaufende Secrets im Tenant ist.</p>

<p>Das Script ist primär als Anschauungsmaterial gedacht. Es besteht die Möglichkeiten es in vielerlei Hinsicht auszubauen und es an eigene Bedürfnisse anzupassen. Die Integration in ein Automation Runbook, in eine Logic App mit daraus resultierender Mailversand, an die Maildressen der gelisteten Owner, sind nur einige Beispiele</p>

<p><a href="https://github.com/KlaBier/Powershell/tree/main/AAD_Secret_Infos">Link zu dem Powershell Script </a></p>

<p>Cover image Stefan Coders from Pixabay</p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2023-01-07-GetSecretInfos/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2023-01-07-GetSecretInfos/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2023-01-07-GetSecretInfos/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name>Klaus Bierschenk</name></author><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2023-01-07-GetSecretInfos_Cover.jpg" /><media:content medium="image" url="http://localhost:4000/MyPics/2023-01-07-GetSecretInfos_Cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ask me anything - Synchronization</title><link href="http://localhost:4000/2022-07-10-AMA_AADConnect/" rel="alternate" type="text/html" title="Ask me anything - Synchronization" /><published>2022-07-10T14:34:32+02:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/AMA_AADConnect</id><content type="html" xml:base="http://localhost:4000/2022-07-10-AMA_AADConnect/"><![CDATA[<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_I.png" style="width:75%" />
  <figcaption>Figure 1: AMA AAD Connect Teaser</figcaption>
</figure>

<ul id="markdown-toc">
  <li><a href="#deutsche-inhalte" id="markdown-toc-deutsche-inhalte">Deutsche Inhalte</a>    <ul>
      <li><a href="#configuration-setup" id="markdown-toc-configuration-setup">Configuration, Setup</a>        <ul>
          <li><a href="#wo-finde-ich-die-version-von-aadconnect-server" id="markdown-toc-wo-finde-ich-die-version-von-aadconnect-server">Wo finde ich die Version von AADConnect Server?</a></li>
          <li><a href="#welche-möglichkeiten-von-hochverfügbarkeit-und-lastenausgleich-gibt-es" id="markdown-toc-welche-möglichkeiten-von-hochverfügbarkeit-und-lastenausgleich-gibt-es">Welche Möglichkeiten von Hochverfügbarkeit und Lastenausgleich gibt es?</a></li>
          <li><a href="#wobei-kann-der-azure-ad-connect-documenter-helfen" id="markdown-toc-wobei-kann-der-azure-ad-connect-documenter-helfen">Wobei kann der Azure AD Connect Documenter helfen?</a></li>
          <li><a href="#welche-möglichkeiten-gibt-es-für-den-export-der-config" id="markdown-toc-welche-möglichkeiten-gibt-es-für-den-export-der-config">Welche Möglichkeiten gibt es für den Export der Config?</a></li>
          <li><a href="#was-bedeutet-es-wenn-aadc-im-azure-health-portal-unmonitored-ist" id="markdown-toc-was-bedeutet-es-wenn-aadc-im-azure-health-portal-unmonitored-ist">Was bedeutet es wenn AADC im Azure Health portal unmonitored ist?</a></li>
          <li><a href="#was-sind-denn-die-unterschiede-von-cloud-sync-zu-aad-connect-server-vorteilenachteile" id="markdown-toc-was-sind-denn-die-unterschiede-von-cloud-sync-zu-aad-connect-server-vorteilenachteile">Was sind denn die Unterschiede von Cloud Sync zu AAD Connect Server (Vorteile/Nachteile!)</a></li>
          <li><a href="#ist-migration-nach-cloud-sync-empfohlen-sinnvoll-oder-möglich" id="markdown-toc-ist-migration-nach-cloud-sync-empfohlen-sinnvoll-oder-möglich">Ist Migration nach Cloud Sync empfohlen, sinnvoll oder möglich?</a></li>
        </ul>
      </li>
      <li><a href="#operations" id="markdown-toc-operations">Operations:</a>        <ul>
          <li><a href="#wie-sieht-ein-health-check-aus" id="markdown-toc-wie-sieht-ein-health-check-aus">Wie sieht ein Health Check aus?</a></li>
          <li><a href="#-bei-cloud-sync" id="markdown-toc--bei-cloud-sync">… bei Cloud Sync</a></li>
          <li><a href="#-und-bei-aadc-server" id="markdown-toc--und-bei-aadc-server">… und bei AADC Server</a></li>
          <li><a href="#was-ist-zu-tun-wenn-localdb-zu-klein-oder-nicht-mehr-ausreichend-ist-10gb" id="markdown-toc-was-ist-zu-tun-wenn-localdb-zu-klein-oder-nicht-mehr-ausreichend-ist-10gb">Was ist zu tun wenn localDb zu klein oder nicht mehr ausreichend ist (10GB)?</a></li>
        </ul>
      </li>
      <li><a href="#was-gibt-es-beim-update-auf-v2-zu-beachten" id="markdown-toc-was-gibt-es-beim-update-auf-v2-zu-beachten">Was gibt es beim Update auf V2 zu beachten?</a></li>
    </ul>
  </li>
  <li><a href="#english-content-from-the-ama" id="markdown-toc-english-content-from-the-ama">English content from the AMA</a>    <ul>
      <li><a href="#configuration-setup-1" id="markdown-toc-configuration-setup-1">Configuration, Setup</a>        <ul>
          <li><a href="#where-can-i-find-the-version-of-aadconnect-server" id="markdown-toc-where-can-i-find-the-version-of-aadconnect-server">Where can I find the version of AADConnect Server?</a></li>
          <li><a href="#what-are-the-options-for-high-availability-and-load-balancing" id="markdown-toc-what-are-the-options-for-high-availability-and-load-balancing">What are the options for high availability and load balancing?</a></li>
          <li><a href="#what-the-azure-ad-connect-documenter-can-help-with" id="markdown-toc-what-the-azure-ad-connect-documenter-can-help-with">What the Azure AD Connect Documenter can help with?</a></li>
          <li><a href="#hat-are-the-options-for-exporting-the-config" id="markdown-toc-hat-are-the-options-for-exporting-the-config">hat are the options for exporting the Config?</a></li>
          <li><a href="#what-does-it-mean-when-aadc-is-unmonitored-in-azure-health-portal" id="markdown-toc-what-does-it-mean-when-aadc-is-unmonitored-in-azure-health-portal">What does it mean when AADC is unmonitored in Azure Health portal?</a></li>
          <li><a href="#what-are-the-differences-between-cloud-sync-and-aad-connect-server-advantagesdisadvantages" id="markdown-toc-what-are-the-differences-between-cloud-sync-and-aad-connect-server-advantagesdisadvantages">What are the differences between Cloud Sync and AAD Connect Server (advantages/disadvantages!)?</a></li>
          <li><a href="#is-migration-to-cloud-sync-recommended-useful-or-possible" id="markdown-toc-is-migration-to-cloud-sync-recommended-useful-or-possible">Is migration to Cloud Sync recommended, useful or possible?</a></li>
        </ul>
      </li>
      <li><a href="#operations-1" id="markdown-toc-operations-1">Operations:</a>        <ul>
          <li><a href="#what-does-a-health-check-look-like" id="markdown-toc-what-does-a-health-check-look-like">What does a Health Check look like?</a></li>
          <li><a href="#-for-cloud-sync" id="markdown-toc--for-cloud-sync">… for Cloud Sync</a></li>
          <li><a href="#-and-for-aadc-server" id="markdown-toc--and-for-aadc-server">… and for AADC Server</a></li>
          <li><a href="#what-to-do-if-localdb-is-too-small-or-insufficient-10gb" id="markdown-toc-what-to-do-if-localdb-is-too-small-or-insufficient-10gb">What to do if localDb is too small or insufficient (10GB)?</a></li>
        </ul>
      </li>
      <li><a href="#what-do-i-have-to-consider-when-updating-to-v2" id="markdown-toc-what-do-i-have-to-consider-when-updating-to-v2">What do I have to consider when updating to V2?</a></li>
    </ul>
  </li>
</ul>

<p>This was a German Session. But I have seen a couple of english speaking attandies in the audience, please find the english content below.</p>

<p>Azure AMA zum Thema Synchronisation, zusammen mit Gregor Reimling vom Azure Metup Bonn. Das waren spannende Fragestellungen rund um den endenden Support von AAD Connect v1 und dem Update auf die Version 2 des Sync Boliden. Wir hatten aber noch weitere Themen, die ich ebenfalls sehr spannend fand. Eine Liste der Fragen und Antworten findet ihr in diesem Beitrag</p>

<p>Die Session wurde aufgezeichnet und ist auf <a href="https://www.youtube.com/watch?v=W2YGSMEvaKA&amp;t=1s" target="_blank">YouTube</a></p>

<p><strong>Hinweis</strong></p>

<p>Wenn in diesem Beitrag von AADC Server die Rede ist, ist immer die aktuelle Variante der Synchronisation, der On-Premises Bolide, gemeint. Wann immer Cloud Sync (Azure AD Cloud Sync) angesprochen wird, ist die neue Technologie der Synchronisation gemeint. Die macht mit Einschränkungen das Gleiche, arbeitet aber unter der Haube komplett anders. In den ersten Versionen (vor GA) wurde Cloud Sync mit Azure AD Cloud Provisioning betitelt.</p>

<h1 id="deutsche-inhalte">Deutsche Inhalte</h1>
<h2 id="configuration-setup">Configuration, Setup</h2>
<h3 id="wo-finde-ich-die-version-von-aadconnect-server">Wo finde ich die Version von AADConnect Server?</h3>
<p>Die Frage ist berechtigt, denn lange Zeit war die Version nur an wenigen Stellen und nicht wirklich intuitiv zu finden.</p>

<p>Ein Ort war (und ist) in “Apps &amp; features”, wie folgende Abbildung zeigt:</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_II.png" style="width:90%" />
  <figcaption>Figure 2: Die Version von AADC ist unter anderem in "Apps &amp; features" zu finden</figcaption>
</figure>

<p>Zwischenzeitlich hat Microsoft die Verion auch im “Synchronization Service Manager” integriert, wo sie meiner Meinung nach auch hingehört. Dort ist sie im Menü “Help” und dann “About …” zu finden</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_III.png" style="width:100%" />
  <figcaption>Figure 3: Version findet sich seit Neuestem auch im Sync Manager ...</figcaption>
</figure>

<p>… oder mittlerweile auch im AAD Portal</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_IV.png" style="width:100%" />
  <figcaption>Figure 4: ... oder im Azure AD Portal</figcaption>
</figure>

<p><strong>Hinweis</strong></p>

<p>Sollten die erforderlichen Berechtigungen fehlen, um den “Synchronization Manager” auszuführen, lässt sich die Version auch im Azure AD ermitteln. Und zwar im Bereich Connect Health, wie oben abgebildet. Sollte das aus irgendeinem Grund nicht gehen, weil zum Beispiel der Health Agent nicht registriert ist oder keine Infos liefert, bleibt immer noch “Apps &amp; features”.</p>

<p>Die Version ist bei AADC wichtig, da es häufiger Updates gibt und es von Bedeutung sein kann, zu wissen, was aktuell installiert ist. Umso verwirrender war es bislang, die Version nicht dort zu finden, wo sie intuitiv vermutet wird. Aber umso besser jetzt, dass MS dies nun an den richtigen Stellen integriert hat.</p>

<p>Solltest Du eine ältere Version von AADC einsetzen, und im AAD Connect Health Dashboard und auch im Synchronization Manager” nicht fündig werden, ist “Apps &amp; features” ebenfalls die beste Wahl für Dich, um die version herauszufinden</p>

<h3 id="welche-möglichkeiten-von-hochverfügbarkeit-und-lastenausgleich-gibt-es">Welche Möglichkeiten von Hochverfügbarkeit und Lastenausgleich gibt es?</h3>
<p>Cloud Sync bietet die Möglichkeit mehrere Agenten On-Premises auf Memberserver zu installieren. Diese Server bieten Hochverfügbarkeit, aber keinen Lastenausgleich. Mit anderen Worten: fällt ein Server aus, übernimmt ein anderer. Müssen x tausend Identitäten synchronisiert werden, geschieht dies durch einen Agenten (Server), ohne dass sich mehrere die Last teilen werden.</p>

<p>Diesen Lastenausgleich gibt es bei AADC nicht. Genauso gibt es keine “richtige” Möglichkeit der Hochverfügbarkeit. Einzig die Implementierueng eines oder mehrere sogenannter “Staging” Server ist eine Option, für ein Ausfallszenario vorzusorgen. Bei AADC ist immer ein Server der aktive Server. Das heisst, er schreibt (exportiert) Änderungen. Staging Server machen das Gleiche, jedoch exportieren sie nicht, auch machen sie keinen Password Hash Sync. In ihrer Datenbank ist aber der komplette Bestand an Identitäten enthalten. Fällt der aktive Servers aus, wird manuell aus dem Staging Server der aktive Server und ein kompletter Import aller zu synchronisierenden Objekte ist nicht notwendig, da diese Infos schon in der Datenbank liegen. Somit bedeutet dies eine Zeitersparnis, da quasi nur der Export aktiviert wird.
Das ist aber nicht wirklich Hochverfügbarkeit.</p>

<p>Das Thema ist spannend und herausfordernd. Da es einige Aspekte gibt, die hier unbedingt beachtet werden müssen. Zum Beispiel hat jeder AADC Server seine eigene Konfiguration, die mit den anderen AADC Servern nicht synchronisiert oder abgeglichen wird, wie das von einem Farm Setup bekannt ist, bei ADFS beispielsweise. Das birgt ein Risiko im Falle eines Wechsels von Staging zu aktivem Server, wenn der Staging Server ein anderes Setup als sein Pendant besitzt. Es gibt hier Maßnahmen und Tools wie dem zu begegnen ist. zum Teil ist dies hier beschrieben <a href="https://nothingbutcloud.net/2020-03-21-CP/#local-components" target="_blank">Local components in AADC</a></p>

<p>Die ganze Story beschreibt Microsoft in diesem <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-sync-staging-server" target="_blank">Docs Artikel</a></p>

<h3 id="wobei-kann-der-azure-ad-connect-documenter-helfen">Wobei kann der Azure AD Connect Documenter helfen?</h3>
<p>Der Azure AD Connect Documenter ist ein Tool, das nicht Teil des Setups ist und separat installiert werden muss. Die Installation auf einem AADC Server ist einfach und besteht nur aus einem simplen Copy der Dateien aus Github.
Danch wird für den Vergleich ein Dump der Konfiguration auf jedem der AADC Server erstellt, die es zu vergleichen gilt.</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-ADSyncServerConfiguration</span><span class="w"> </span><span class="nt">-Path</span><span class="w"> </span><span class="s2">"C:\ExportFolder"</span><span class="w">
</span></code></pre></div></div>

<p>Dieser Export jedes Servers, mit allen Unterverzeichnissen, muss sich auf dem Computer befinden, auf dem der Documenter ausgeführt wird. Der wertet diesen aus und erstellt einen HTML Report der farblich die Unterschiede sichtbar macht.</p>

<p>Die Dateien und die Dokumentation sind hier zu finden: <a href="https://github.com/Microsoft/AADConnectConfigDocumenter" target="_blank">Azure AD Connect Documenter</a></p>

<p>Erwähnenswert ist an dieser Stelle noch, das der “Documenter” dabei helfen kann “Sync Rules” von einem Server zu einem anderen zu transferieren. Der gesamte Vorgang ist zwar manuell, aber der Export mittels generiertem PS1 Script kann auf dem Zielserver ausgeführt werden, ohne das die Connector-ID anzupassen ist, wie das beispielsweise bei einem Transfer mittels Regeleditor der Fall ist. Hierfür ist in dem HTML-Report lediglich die Option “Only show changes” zu aktvieren. Danach erscheint die Möglichkeit “Download Sync Rule Changes Script”</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_V.png" style="width:100%" />
  <figcaption>Figure 5: AADC Documenter vergleicht den Export von zwei AADC Servern</figcaption>
</figure>

<h3 id="welche-möglichkeiten-gibt-es-für-den-export-der-config">Welche Möglichkeiten gibt es für den Export der Config?</h3>
<p>Ab Version 1.5.42.0 (July 2020) ist der Export der Konfiguration über den Setup Assistenten von AADC möglich</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VI.png" style="width:90%" />
  <figcaption>Figure 6: AADC Config manager erlaubt Export der Konfiguration für den Import auf einem weiteren Server</figcaption>
</figure>

<p>Beim Einsatz einer älteren Version, die den Export in der GUI des Config Managers nicht unterstützt, wie oben abgebildet, gibt es einen alternativen Weg für den Export. Details sind hier zu finden <a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-import-export-config#migrate-settings-from-an-existing-server" target="_blank">“Migrate settings from an existing server”</a></p>

<p>Etwas umständlicher, aber der Weg führt hier über die Powershell genauso zum Ziel</p>

<p>Übrigens erstellt der AADC Config Wizard bei Änderungen ein JSON File mit der Konfiguration, die für den Import auf einem weiteren Server (z.B. als Staging) genutzt werden kann.</p>

<p>(Ordner: C:\ProgramData\AADConnect)</p>

<h3 id="was-bedeutet-es-wenn-aadc-im-azure-health-portal-unmonitored-ist">Was bedeutet es wenn AADC im Azure Health portal unmonitored ist?</h3>
<p>Ist ein AADC Server länger als 30 Tage inaktiv, wechselt sein Status im Dashboard von Azure AD Connect Health zu “unmonitored”, auch wenn der Server danach wieder gestartet wird, bleibt er “unmonitored”
Das lässt sich beheben, in dem der Health Agent neu installiert wird oder eine Neuregistrierung des Agent mit dem folgendem Cmdlet erfolgt:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Register-AzureADConnectHealthSyncAgent</span><span class="w"> </span><span class="nt">-AttributeFiltering</span><span class="w"> </span><span class="bp">$true</span><span class="w"> </span><span class="nt">-StagingMode</span><span class="w"> </span><span class="bp">$true</span><span class="w">
</span></code></pre></div></div>

<h3 id="was-sind-denn-die-unterschiede-von-cloud-sync-zu-aad-connect-server-vorteilenachteile">Was sind denn die Unterschiede von Cloud Sync zu AAD Connect Server (Vorteile/Nachteile!)</h3>

<p>Azure AD Connect Cloud Sync ist die neuere (Public Preview Okt. 2019) Technology für die Synchronisation und vollständig in das Azure AD Portal integriert. Der Teil, der On-Premises installiert wird, ist gering und beschränkt sich auf einen schlanken Agent. Konfiguration, und alles was damit zusammenhängt, liegt im Azure AD. Der lokale Agent kommuniziert lediglich mit dem Forest und transferiert die Identitäten in Richtung Azure AD.</p>

<p>Im Gegenzug dazu ist AADC Server die seit langem etablierte, On-Premises Server basierte Technologie der Synchronisation. Sie entstammt ursprünglich dem Sync Client von MIIS (miisclient.exe) aus dem Jahre 2007 und ist eine für das Azure AD angepasstes Variante des Sync Client</p>

<p>Ich habe zwei Artikel um Thema Cloud Sync hier in meinem Blog, die auch auf die Unterschiede zwischen den beiden Technologien eingehen:</p>

<p><a href="https://nothingbutcloud.net/2020-03-21-CP/" target="_blank">“First experience with Azure AD Connect Cloud Provisioning”</a></p>

<p><a href="https://nothingbutcloud.net/2020-09-24-CP-Advanced/" target="_blank">“More Infos on Azure AD Connect Cloud Provisioning”</a></p>

<p>Ein entsprechender Microsoft Artikel, der auf die Unterschiede eingeht, ist hier zu finden:</p>

<p><a href="https://docs.microsoft.com/de-de/azure/active-directory/cloud-sync/what-is-cloud-sync#comparison-between-azure-ad-connect-and-cloud-sync" target="_blank">“Unterschiede zwischen Cloud Sync und AADC Server”</a></p>

<h3 id="ist-migration-nach-cloud-sync-empfohlen-sinnvoll-oder-möglich">Ist Migration nach Cloud Sync empfohlen, sinnvoll oder möglich?</h3>
<p>Beide Technlogien sind von der Architektur her verschieden und bislang ist mir kein Migrationspfad bekannt. Warum auch? Eine intakte AADC Server Implementierung durch eine Cloud Sync Implementierung zu ersetzen macht aktuell keinen Sinn, da AADC Server derzeit noch einen größeren Funktionsumfang besitzt. Die Frage stellt sich somit aktuell nicht. Aber ich bin ziemlich sicher, dass irgendwann, wenn die Funktionen in Cloud Sync zunehmen und ein Einsatz dieser Technologie attraktiver wird, eine Migration von nutzen sein kann und Microsoft einen Migrationspfad beschreiben wird.</p>

<h2 id="operations">Operations:</h2>
<h3 id="wie-sieht-ein-health-check-aus">Wie sieht ein Health Check aus?</h3>

<h3 id="-bei-cloud-sync">… bei Cloud Sync</h3>

<p>Bei Cloud Sync gibt es mehrere Möglichkeiten, dem Service auf dem Zahn zu fühlen. Ein guter und erster Start für einen Check ist das Cloud Sync Dashboard sowohl beim Service aber auch bei den jeweiligen Agenten, die hier aufgelistet sind:</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VII.png" style="width:100%" />
  <figcaption>Figure 7: "Healthy" als Service Status sieht gut aus</figcaption>
</figure>

<p>Die Option “Logs” in der Auswahl oben bezieht sich übrigens auf die Protokolle der Synchronisation. Hier ist nicht der Status zu den Agenten oder Ähnliches zu finden</p>

<p>Auch wenn Cloud Sync den Schwerpunkt der Administration in Azure hat, so gibt es doch auf den Servern mit installiertem Agent die Möglichkeit den Status zu prüfen und auch gezielt nach Fehlern zu suchen. Meiner Meinung nach aber als eine Option, wenn die Aussagekraft der Fehler in Azure AD nicht schlüssig ist, quasi als nächsten Schritt in der Fehlersuche.</p>

<p>Das Eventlog ist immer eine gute Quelle um auf einem Server nach dem Rechten zu sehen, so auch bei Cloud Sync. Mit dem Agentsetup werden zwei Protokolle mit installiert, <strong>AgentUpdater</strong> und <strong>ProvisioningAgent</strong> Ersteres dient dem Update, wie der Name auch andeutet, interesseanter ist da schon das Log des Provioning Agenten, das zeigt ob alles rund läuft oder eben nicht.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VIII.png" style="width:100%" />
  <figcaption>Figure 8: "Das Log des Provioning Agenten gibt Aufschluss ob alles richtig tickt</figcaption>
</figure>

<p>Im Übrigen sind das “Application Log” und auch das “System Log” gleichfalls Orte, die der Agent für die Ablage von Informationen verwendet. Es bietet sich also an sämtliche Logs zu betrachten.</p>

<p>Dann wäre da natürlich noch die Powershell. Mit dem Setup des Agenten wird alles erforderlich bereitgestellt. Mit einigen wenigen Cmdlets ist das Module am Start und bietet somit die Möglichkeit von der Kommandozeile aus aktiv zu werden, wie die nächste Abbildung zeigt:</p>
<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_IX.png" style="width:100%" />
  <figcaption>Figure 9: "Das mit installierte Powershell Module für Cloud Sync</figcaption>
</figure>

<p>Für eine noch detailliertere Analyse bieten sich die Trace Logs an. Hier sind übrigens auch die Eventlogs (EVTX files) zu finden, die mit folgendem Cmdlet aus dem Cloud Sync Module generiert werden:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Export-AADCloudSyncToolsLogs</span><span class="w">
</span></code></pre></div></div>
<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_X.png" style="width:100%" />
  <figcaption>Figure 10: Die Tracelogs bieten einen noch tieferen Einblick in die Arbeitsweise des Cloud Sync Agenten</figcaption>
</figure>

<h3 id="-und-bei-aadc-server">… und bei AADC Server</h3>

<p>Bei Azure AD Connect Server gibt es mehr Möglichkeiten für einen Health Check, verglichen zu Cloud Sync. Für einen ersten Blick, und um zu prüfen, ob alles passt, macht es Sinn im Azure AD Portal zu starten. Hier wird ein umfassender Status angezeigt und das Health Dashboard ist zu finden im Portal des Azure AD in der Navigation unter <strong>Azure AD Connect</strong> und dann im Bereich von Azure AD Connect über die Auswahl <strong>HEALTH AND ANALYTICS</strong></p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XI.png" style="width:100%" />
  <figcaption>Figure 11: Health Dashboard zeigt den Gesamtstatus von Azure AD Connect Server</figcaption>
</figure>

<p>Da es auch einen Health Agenten für ADFS und einen für die AD Domain Services gibt, lässt sich hier alles gesammelt betrachten, natürlich nur wenn die lokalen Systeme mit dem jeweiligen Agenten ausgestattet sind. Alle Infos zu AADC befinden sich hinter den entsprechenden Quick start links (siehe roter Rahmen in Abbildung 11)</p>

<p>Das Dashboard hier besteht aus einer Vielzahl aktiver Elemente, die per Quicklink zwischen den Bereichen wechselt, andere Einsichten liefert und eine detaillierte Analyse der Health Infos gestattet. Wie am Beispiel der beiden Sever unten bei Auswahl eines der jeweiligen Serverobjekte.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XII.png" style="width:100%" />
  <figcaption>Figure 12: So soll es aussehen: alles gesund meldet der health Agent von den On-prem AADC Servern</figcaption>
</figure>

<p>Sollte das Azure AD und die Health Dashboards keinen Hinweis zu einer Fehlersituation liefern, besteht auch bei den Azure AD Connect Servern die Möglichkeit das Eventlog zu untersuchen. Das Augenmerk sollte hier auf dem “Application Log” liegen, hier listet der Sync Service akkribisch was Sache ist.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XIII.png" style="width:100%" />
  <figcaption>Figure 13: Application Event Log liefert detaillierte Infos zum Zustand der Synchronisation</figcaption>
</figure>

<p>Die Powershell bietet perfekte Möglichkeiten um auf einem AADC Server nach dem Rechten zu sehen. Das mächtige PS-Module “adsync” (117 cmdlets) liefert viele Möglichkeiten hierzu. Genauso hilfreich ist das Modul “ADSyncDagnostics” mit dem Cmdlet</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Invoke-ADSyncDiagnostics</span><span class="w">
</span></code></pre></div></div>

<p>wie Abbildung 14 zeigt.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XIV.png" style="width:100%" />
  <figcaption>Figure 14: Powershell eignet sich perfekt für Health Check und Analyse. Hier das Cmdlet "Invoke-ADSyncDiagnostics"</figcaption>
</figure>

<h3 id="was-ist-zu-tun-wenn-localdb-zu-klein-oder-nicht-mehr-ausreichend-ist-10gb">Was ist zu tun wenn localDb zu klein oder nicht mehr ausreichend ist (10GB)?</h3>
<p>Beim Setup von Azure AD Connect wird, wenn im Wizard nicht anders angegeben, ein Local DB installiert. Dies ist praktisch und einfach. Local DB ist aber auf eine maximale DB Größe von 10GB beschränkt, was sich viel anhört, aber unter Umständen schnell erreicht ist. Es lässt sich pauschal nicht beziffern, das bei x Usern im Sync die 10GB bei dieser oder jener Anzahl erreicht ist. Das hängt von mehreren Faktoren ab. Aber der wichtigste Faktor ist <strong>wieviele Connectoren (AD Forests) sind Teil der Synchronisation?</strong></p>

<p>In der Gesamt DB ist schließlich alles enthalten: Metaverse (sämtliche Objekte). Genauso die Objekte der jeweiligen Connectoren, quasi als “Rohdaten Import” für den Abgleich mit der Metaverse.</p>

<p>Um es für die Frage hier auf den Punkt zu bringen, habe ich zuletzt ein AADC Setup mit einer AD Domain gesehen. Hier wurden ca. 500 Gruppen synchronisiert. Keine Computerobjekte. Und es waren um die 30.000 Benutzer vorhanden als die DB Größe die Grenze von 10GB erreichte.</p>

<p>Microsoft beschreibt in <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-install-move-db" target="_blank">diesem Artikel</a> und auch <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-install-existing-database" target="_blank">hier</a> die einzelnen Schritte, die beim Verschieben der Datenbank, bzw. beim Wiederverwenden einer vorhandenenen DB, zu tun sind.</p>

<p>Um es hier zusammenfassend auf den Ounkt zu bringen:</p>

<ul>
  <li>
    <p>DB (MDF- und LDF- Dateien) auf dem aktuellen Sync Server dem Dateisystem an einen sicheren Ort kopieren bzw. direkt auf den dedizierten, entfernten SQL Server.</p>
  </li>
  <li>
    <p>DB dort einbinden</p>
  </li>
  <li>
    <p>AADC neu installieren, und wie in den Beitrag aus den Links oben beschrieben, das Setup mit dem Switch <strong>/useexistingdatabase</strong> aufrufen. Im Setup-Wizard besteht dadurch die Option einen SQL Server anzugeben. Im Weiteren wird die dort befindliche DB erkannt und verwendet.</p>
  </li>
  <li>
    <p>Bitte unbedingt die Post-Tasks aus den MS Beiträgen beachten!</p>
  </li>
</ul>

<h2 id="was-gibt-es-beim-update-auf-v2-zu-beachten">Was gibt es beim Update auf V2 zu beachten?</h2>
<p>Aus meiner Sicht ist die Aktualisierung auf die v2 unkritisch und kein Problem! Ich habe schon in-place Updates gemacht, würde aber strategisch gesehen einen anderen Weg gehen, wie weiter unten beschrieben. Zunächst einmal einige Eckpunkte rund um das Thema AADC Update auf v2</p>

<ul>
  <li>
    <p>v2 enthält keinerlei gravierende Änderungen an den Funktionalitäten und Features. Lediglich die Serverkomponenten wurden an die aktuellen Server Versionen angepasst: Windows Server 2016 und SQL 2019. Eine Gesamtliste der Anforderungen befindet sich hier <a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/reference-connect-version-history#2030" target="_blank">Functional changes in 2.0.3.0</a></p>
  </li>
  <li>
    <p>Auch wenn automatisches Update “Set-ADSyncAutoUpgrade -AutoUpgradeState enabled”  eingeschaltet ist, greift das Setting hier nicht. Die Aktualisierung auf v2 ist ein manueller Schritt, der nicht automatisiert ausgeführt wird</p>
  </li>
  <li>
    <p>Eine von einem v1 AADC Server erstellter Export der Config kann auf einem neuen v2 Server importiert werden. Die JSON Files sind kompatibel</p>
  </li>
  <li>
    <p>Wie oben erwähnt ist ein In-Place Update unterstützt. Da hier aber Altlasten auf dem Server zurückbleiben (SQL Server Komponenten) würd ich zu einer neuen Installation raten. Alte SQL Server Überbleibsel lassen sich zwar manuell entfernen, aber eine neue Version macht hier aus meiner Sicht Sinn.</p>
  </li>
</ul>

<p>Wie bereits erwähnt unterstützt das Setup ein In-Place Update. ich würde aber folgende Schritte ausführen um einen Server auf v2 zu aktualisieren:</p>

<ol>
  <li>Von aktuellem AADC Server die Config exportieren (AADC Config Wizard)</li>
  <li>Aktiven AADC Server zum Staging machen</li>
  <li>Neuen Server (neuer Computername) bereitstellen.</li>
  <li>TLS 1.2 aktivieren, wenn noch nicht geschehen. Sonst droht eine Fehlermeldung beim Setup von AADC
<a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/reference-connect-tls-enforcement#enable-tls-12" target="_blank">Erzwingen von TLS 1.2 für AADC</a></li>
  <li>Installieren von AADC mit v2 und Import der JSON Config von anderem AADC Server (Punkt #1)</li>
  <li>Server ist Staging. Health Check, ob alles passt. AD Health Dashboard, Eventlog, Synchronization Service Manager Console. Im Regeleditor prüfen ob die Regeln vorhanden sind</li>
  <li>Ändern von Testdaten On-Premises (Benutzer Telefonnummer, neuen Benutzer anlegen etc.) und manuelle Synchronisation starten. Cmdlet: “Start-ADSyncSyncCycle”
Werden Änderungen verarbeitet? Prüfen von Pending Exports für den Azure AD Connector Space. Der Server ist Staging. Er wird nichts Richtung Azure AD schreiben</li>
  <li>Wenn alles ok ist, den neuen Server aktivieren (AADC Config Wizard)</li>
  <li>Geht bei den Punkten oben irgendetwas schief, kann der zuvor zum Staging Server ausgemusterte Sync Server wieder in Betrieb genommen werden und es besteht Zeit in Ruhe das Problem zu untersuchen.</li>
  <li>Ist bis hierhin alles in Ordnung (wovon auszugehen ist), sind jetzt der Reihe nach die vorhandenen Staging Server zu aktualisieren. Auch hier gilt wieder, entweder In-Place oder mit einer komplett neuen Maschine</li>
</ol>

<h1 id="english-content-from-the-ama">English content from the AMA</h1>

<p>Azure AMA (Ask me anything) on the topic of synchronization, together with Gregor Reimling from Azure Metup Bonn. These were exciting questions around the ending support of AAD Connect v1 and the update to version 2 of the Sync Bolide. However, we had other topics that I also found very exciting. You can find a list of the questions and answers in this post</p>

<p>The session was recorded and is available on <a href="https://www.youtube.com/watch?v=W2YGSMEvaKA&amp;t=1s" target="_blank">YouTube</a></p>

<h2 id="configuration-setup-1">Configuration, Setup</h2>
<h3 id="where-can-i-find-the-version-of-aadconnect-server">Where can I find the version of AADConnect Server?</h3>
<p>The question is justified, because for a long time the version could only be found in a few places and not really intuitively.</p>

<p>One place was (and is) in “Apps &amp; features”, as the following figure shows:</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_II.png" style="width:90%" />
  <figcaption>Figure 2: The version of AADC can be found in "Apps &amp; features" among others</figcaption>
</figure>

<p>In the meantime, Microsoft has also integrated the Verion in the “Synchronization Service Manager”, where I think this is the perfect place. There it can be found in the menu “Help” and then “About …”</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_III.png" style="width:100%" />
  <figcaption>Figure 3: version can now also be found in the Sync Manager ...</figcaption>
</figure>

<p>… or meanwhile also in the AAD Portal</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_IV.png" style="width:100%" />
  <figcaption>Figure 4: ... or in the Azure AD Portal</figcaption>
</figure>

<p><strong>Note</strong></p>

<p>If the required permissions to run the “Synchronization Manager” are missing, the version can also be determined in Azure AD. This is done in the Connect Health area, as shown above. If for some reason this does not work, for example because the Health Agent is not registered or does not provide any info, there is still “Apps &amp; features” the location to check the version</p>

<p>The version is important with AADC because updates are more frequent and it can be significant to know what is currently installed. So it was all the more confusing not to find the version where it is intuitively assumed. But all the better now that MS has integrated this in the right places.</p>

<p>If you are using an older version of AADC and can’t find it in the AAD Connect Health Dashboard and also in the Synchronization Manager, Apps &amp; features is also the best choice for you to find out the version.</p>

<h3 id="what-are-the-options-for-high-availability-and-load-balancing">What are the options for high availability and load balancing?</h3>
<p>Cloud Sync provides the ability to install multiple agents on-premises on member servers. These servers provide high availability, but no load balancing. In other words, if one server fails, another one takes over. If x thousand identities need to be synchronized, this is done by one agent (server) without to share the load between them.</p>

<p>This load balancing does not exist in AADC. In the same way there is no “real” possibility of high availability. Only the implementation of one or more so-called “staging” servers is an option to provide for a failure scenario. With AADC one server is always the active server. This box writes changes (exports). Staging servers do the same, but they do not run an export, nor do they do password hash sync. However, their database contains the complete set of identities. If the active server fails, the staging server manually becomes the active server and a complete import of all objects to be synchronized is not necessary, because this info is already in the database. Thus this means a time saving, since quasi only the export is activated.
But this is not really high availability.</p>

<p>The topic is exciting and challenging. As there are some aspects that have to be taken into account. For example, each AADC server has its own configuration, which is not synchronized or aligned with the other AADC servers, as is known from a farm setup, with ADFS for example. This poses a risk in case of a change from staging to active server, if the staging server has a different setup than its counterpart. There are measures and tools to counter this, some of which are described here. <a href="https://nothingbutcloud.net/2020-03-21-CP/#local-components" target="_blank">Local components in AADC</a></p>

<p>Microsoft describes the whole story in this <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-sync-staging-server" target="_blank">Docs Artikel</a></p>

<h3 id="what-the-azure-ad-connect-documenter-can-help-with">What the Azure AD Connect Documenter can help with?</h3>
<p>Azure AD Connect Documenter is a tool that is not part of the built-in tools and it must be installed separately. The installation on an AADC server is simple and only consists of a simple copy of the files from Github.
Then a dump of the configuration on each of the AADC servers is created for comparison by the Documenter.</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-ADSyncServerConfiguration</span><span class="w"> </span><span class="nt">-Path</span><span class="w"> </span><span class="s2">"C:\ExportFolder"</span><span class="w">
</span></code></pre></div></div>

<p>This dump from each server, with all subdirectories, must be on the computer on which the Documenter is executed. The Documenter evaluates this and creates a HTML report that shows the differences in color.</p>

<p>The files and the documentation can be found here: <a href="https://github.com/Microsoft/AADConnectConfigDocumenter" target="_blank">Azure AD Connect Documenter</a></p>

<p>It is worth mentioning here that the “Documenter” can help to transfer “Sync Rules” from one server to another. The whole process is manual, but the export using the generated PS1 script can be executed on the target server without having to adjust the connector ID, as is the case with a transfer using the rule editor, for example. To do this, simply activate the option “Only show changes” in the HTML report. After that the option “Download Sync Rule Changes Script” appears.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_V.png" style="width:100%" />
  <figcaption>Figure 5: AADC Documenter compares the export from two AADC servers</figcaption>
</figure>

<h3 id="hat-are-the-options-for-exporting-the-config">hat are the options for exporting the Config?</h3>
<p>As of version 1.5.42.0 (July 2020) the export of the configuration is possible via the setup wizard of AADC</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VI.png" style="width:90%" />
  <figcaption>Figure 6: AADC Config manager allows export of configuration for later import on another server</figcaption>
</figure>

<p>When using an older version that does not support export in the Config Manager GUI, as shown above, there is an alternative way to export. Details can be found here <a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-import-export-config#migrate-settings-from-an-existing-server" target="_blank">“Migrate settings from an existing server”</a></p>

<p>A bit more cumbersome, but the way leads here via the Powershell just as to the goal</p>

<p>By the way, the AADC Config Wizard creates a JSON file with the configuration when changes are made, which can be used for import on another server (e.g. as staging).
(Ordner: C:\ProgramData\AADConnect)</p>

<h3 id="what-does-it-mean-when-aadc-is-unmonitored-in-azure-health-portal">What does it mean when AADC is unmonitored in Azure Health portal?</h3>
<p>If an AADC server is inactive for more than 30 days, its status in the Azure AD Connect Health dashboard changes to “unmonitored”, even if the server is restarted afterwards, it remains “unmonitored”.
This can be fixed by reinstalling the Health Agent or re-registering the agent with the following cmdlet:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Register-AzureADConnectHealthSyncAgent</span><span class="w"> </span><span class="nt">-AttributeFiltering</span><span class="w"> </span><span class="bp">$true</span><span class="w"> </span><span class="nt">-StagingMode</span><span class="w"> </span><span class="bp">$true</span><span class="w">
</span></code></pre></div></div>

<h3 id="what-are-the-differences-between-cloud-sync-and-aad-connect-server-advantagesdisadvantages">What are the differences between Cloud Sync and AAD Connect Server (advantages/disadvantages!)?</h3>

<p>Azure AD Connect Cloud Sync is the newer (Public Preview Oct. 2019) technology for synchronization and fully integrated with Azure AD Portal. The part that is installed on-premises is minor and limited to a lean agent. Configuration, and everything related to it, resides in Azure AD. The on-premises agent only communicates with the forest and transfers identities towards Azure AD.</p>

<p>In contrast, AADC Server is the long-established on-premises server-based technology of synchronization. It originates from the Sync Client of MIIS (miisclient.exe) from 2007 and is a variant of the Sync Client adapted for Azure AD.</p>

<p>I have two articles around Cloud Sync here on my blog that also discuss the differences between the two technologies:</p>

<p><a href="https://nothingbutcloud.net/2020-03-21-CP/" target="_blank">“First experience with Azure AD Connect Cloud Provisioning”</a></p>

<p><a href="https://nothingbutcloud.net/2020-09-24-CP-Advanced/" target="_blank">“More Infos on Azure AD Connect Cloud Provisioning”</a></p>

<p>A corresponding Microsoft article that goes into detail about the differences can be found here:</p>

<p><a href="https://docs.microsoft.com/de-de/azure/active-directory/cloud-sync/what-is-cloud-sync#comparison-between-azure-ad-connect-and-cloud-sync" target="_blank">“Differences between Cloud Sync and AADC Server”</a></p>

<h3 id="is-migration-to-cloud-sync-recommended-useful-or-possible">Is migration to Cloud Sync recommended, useful or possible?</h3>
<p>Both technologies are different in terms of architecture and so far I am not aware of a migration path. And why? Replacing an intact AADC Server implementation with a Cloud Sync implementation does not currently make sense, since AADC Server currently still has a larger range of functions. So the question does not arise at the moment. But I am quite sure that at some point, when the features in Cloud Sync increase and the use of this technology becomes more attractive, a migration may be useful and Microsoft will describe a migration path.</p>

<h2 id="operations-1">Operations:</h2>
<h3 id="what-does-a-health-check-look-like">What does a Health Check look like?</h3>

<h3 id="-for-cloud-sync">… for Cloud Sync</h3>

<p>With Cloud Sync there are several ways to check the service. A good and first start for a check is the Cloud Sync Dashboard, both for the service but also for the respective agents, which are listed here:</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VII.png" style="width:100%" />
  <figcaption>Figure 7: "Healthy" as service status looks good</figcaption>
</figure>

<p>By the way, the option “Logs” in the selection above refers to the logs of the synchronization. Here is not the status to the agents to be found</p>

<p>Even if Cloud Sync has the main focus of administration in Azure, there is still the possibility to check the status on the servers with an installed agent and also to search specifically for errors. In my opinion, however, as an option if the meaningfulness of the errors in Azure AD is not conclusive, virtually as the next step in troubleshooting.</p>

<p>The event log is always a good source to check on a server, and Cloud Sync is no exception. With the agent setup, two logs are installed, <strong>AgentUpdater</strong> and <strong>ProvisioningAgent</strong>. The former is used for updates, as the name suggests, but the log of the provisioning agent is more interesting, as it shows whether everything is running smoothly or not.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_VIII.png" style="width:100%" />
  <figcaption>Figure 8: The log of the Provioning Agent provides information if everything is ticking correctly</figcaption>
</figure>

<p>By the way, the “Application Log” and the “System Log” are also places that the agent uses to store information. It is therefore a good idea to look at all logs.</p>

<p>Then, of course, there is the Powershell. With the setup of the agent everything necessary is provided. With a few cmdlets the module is up and running and offers the possibility to be active from the command line, as the next figure shows:</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_IX.png" style="width:100%" />
  <figcaption>Figure 9: The installed Powershell module for Cloud Sync</figcaption>
</figure>

<p>The trace logs can be used for an even more detailed analysis. Here you can also find the event logs (EVTX files), which are generated with the following cmdlet from the Cloud Sync Module:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Export-AADCloudSyncToolsLogs</span><span class="w">
</span></code></pre></div></div>
<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_X.png" style="width:100%" />
  <figcaption>Figure 10: The tracelogs provide an even deeper insight into how the Cloud Sync agent works</figcaption>
</figure>

<h3 id="-and-for-aadc-server">… and for AADC Server</h3>

<p>With Azure AD Connect Server there are more options for a health check compared to Cloud Sync. For a first look, and to check if everything fits, it makes sense to start in the Azure AD portal. Here a comprehensive status is displayed and the health dashboard can be found in the Azure AD portal in the navigation under <strong>Azure AD Connect</strong> and then in the area of Azure AD Connect via the selection <strong>HEALTH AND ANALYTICS</strong>.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XI.png" style="width:100%" />
  <figcaption>Figure 11: Health Dashboard shows the overall status of Azure AD Connect Server</figcaption>
</figure>

<p>Since there is also a Health Agent for ADFS and one for the AD Domain Services, everything can be viewed collectively here, of course only if the local systems are equipped with the respective agent. All information about AADC can be found behind the corresponding Quick start on the left (see red frame in Figure 11).</p>

<p>The dashboard here consists of a multitude of active elements, which switch between the areas via quicklink, provide other insights and allow a detailed analysis of the health info. As in the example of the two servers below, by selecting one of the respective server objects.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XII.png" style="width:100%" />
  <figcaption>Figure 12: This is how it should look: everything healthy is reported by the health agent from the on-prem AADC servers</figcaption>
</figure>

<p>If Azure AD and the health dashboards do not provide any information about an error situation, it is also possible to examine the event log of the Azure AD Connect servers. The focus here should be on the “Application Log”, where the Sync Service meticulously lists what is going on.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XIII.png" style="width:100%" />
  <figcaption>Figure 13: Application Event Log provides detailed info about the state of synchronization</figcaption>
</figure>

<p>The Powershell offers perfect possibilities to check on an AADC server. The powerful PS module “adsync” (117 cmdlets) provides many possibilities for this. Equally helpful is the module “ADSyncDagnostics” with the cmdlet</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Invoke-ADSyncDiagnostics</span><span class="w">
</span></code></pre></div></div>

<p>as Figure 14 shows.</p>

<figure>
  <img src="/MyPics/2022-07-12-AMA_AADConnect_XIV.png" style="width:100%" />
  <figcaption>Figure 14: Powershell is perfect for health check and analysis. Here is the "Invoke-ADSyncDiagnostics cmdlet"</figcaption>
</figure>

<h3 id="what-to-do-if-localdb-is-too-small-or-insufficient-10gb">What to do if localDb is too small or insufficient (10GB)?</h3>
<p>During Azure AD Connect setup, a Local DB is installed unless otherwise specified in the wizard. This is convenient and simple. However, Local DB is limited to a maximum DB size of 10GB, which sounds like a lot, but may be reached quickly. It is not possible to say that with x users in sync the 10GB is reached with this or that number of GB. That depends on several factors. But the most important factor is <strong>how many Connectors (AD Forests) are part of the synchronization?</strong></p>

<p>Everything is contained in the total DB: Metaverse (all objects). As well as the objects of the respective connectors, quasi as “raw data import” for the comparison with the Metaverse.</p>

<p>To get to the point for the question here, I recently saw an AADC setup with an AD domain. Here, about 500 groups were synchronized. No computer objects. And there were around 30,000 users when the DB size reached the 10GB limit.</p>

<p>Microsoft describes in <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-install-move-db" target="_blank">this docs article</a> and also <a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/how-to-connect-install-existing-database" target="_blank">here</a> the individual steps to be taken when moving the database or reusing an existing DB.</p>

<p>To summarize it here to the point:</p>

<ul>
  <li>
    <p>Copy DB (MDF and LDF files) on the current sync server to the file system in a safe place or directly to the dedicated remote SQL server.</p>
  </li>
  <li>
    <p>Mount DB there</p>
  </li>
  <li>
    <p>Reinstall AADC, and as described in the post from the links above, call the setup with the switch <strong>/useexistingdatabase</strong>. In the setup wizard you have the option to specify a SQL server. Afterwards the DB located there will be recognized and used.</p>
  </li>
  <li>
    <p>Please pay attention to the post-tasks from the MS articles!</p>
  </li>
</ul>

<h2 id="what-do-i-have-to-consider-when-updating-to-v2">What do I have to consider when updating to V2?</h2>
<p>From my point of view the update to v2 is uncritical and no problem! I have done in-place updates, but would strategically go a different route as described below. First of all, some key points around the topic of AADC update to v2</p>

<ul>
  <li>
    <p>v2 does not contain any serious changes to functionality and features. Only the server components have been adapted to the current server versions: Windows Server 2016 and SQL 2019. An overall list of requirements can be found here. <a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/reference-connect-version-history#2030" target="_blank">Functional changes in 2.0.3.0</a></p>
  </li>
  <li>
    <p>Even if automatic update “Set-ADSyncAutoUpgrade -AutoUpgradeState enabled” is enabled, the setting does not take effect here. The upgrade to v2 is a manual step that is not automated</p>
  </li>
  <li>
    <p>A config export created by a v1 AADC server can be imported on a new v2 server. The JSON files are compatible</p>
  </li>
  <li>
    <p>As mentioned above, an in-place update is supported. However, since there is legacy on the server (SQL Server components) I would advise a new installation. Old SQL Server leftovers can be removed manually, but a new version makes sense from my point of view.</p>
  </li>
</ul>

<p>As mentioned before the setup supports an in-place update. but I would recommend the following steps to update a server to v2:</p>

<ol>
  <li>export config from current AADC server (AADC Config Wizard).</li>
  <li>make active AADC server staging</li>
  <li>deploy new server (new computer name).</li>
  <li>activate TLS 1.2, if not already done. Otherwise there is a risk of an error message during the setup of AADC.
<a href="https://docs.microsoft.com/de-de/azure/active-directory/hybrid/reference-connect-tls-enforcement#enable-tls-12" target="_blank">Enforce TLS 1.2 for AADC</a></li>
  <li>install AADC with v2 and import JSON config from other AADC server (point #1).</li>
  <li>server is staging. Health Check if everything fits. AD Health Dashboard, Eventlog, Synchronization Service Manager Console. In the rule editor check if the rules are present.</li>
  <li>change test data on-premises (user phone number, create new user etc.) and start manual synchronization. Cmdlet: “Start-ADSyncSyncCycle”.
Are changes processed? Checking pending exports for Azure AD Connector space. The server is staging. It will not write anything towards Azure AD</li>
  <li>if everything is ok, enable the new server (AADC Config Wizard).</li>
  <li>if something goes wrong with the points above, the sync server that was previously retired to staging can be brought back online and there is time to investigate the issue at your leisure.
If everything is in order up to this point (which is to be assumed), the existing staging servers must now be updated one after the other. Again, either in-place or with a completely new machine.</li>
</ol>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2022-07-10-AMA_AADConnect/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2022-07-10-AMA_AADConnect/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2022-07-10-AMA_AADConnect/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[Figure 1: AMA AAD Connect Teaser]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2022-07-12-AMA_AADConnect_I.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2022-07-12-AMA_AADConnect_I.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Azure Meetup Stuttgart (10.02.2022) - Zero trust identity - minor but powerful functionalities in Azure AD</title><link href="http://localhost:4000/2022-02-10-Azure-MeetupStuttgart/" rel="alternate" type="text/html" title="Azure Meetup Stuttgart (10.02.2022) - Zero trust identity - minor but powerful functionalities in Azure AD" /><published>2022-02-10T10:00:32+01:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/Azure-MeetupStuttgart</id><content type="html" xml:base="http://localhost:4000/2022-02-10-Azure-MeetupStuttgart/"><![CDATA[<figure>
  <img src="/MyPics/2022-02-10-Azure-MeetupStuttgart_2.png" style="width:75%" />
  <figcaption>Figure 1: Azure Meetup Teaser</figcaption>
</figure>

<h2 id="session-powerpoint-material">Session Powerpoint material</h2>

<p>I have enjoyed the evening and being a speaker at the <a href="https://www.meetup.com/de-DE/Azure-Stuttgart/events/282805130/">Meetup in Stuttgart</a></p>

<p>Please find my slides here: <a href="/MySlides/Meetup_Stuttgart_Zero_Trust_with_Identity.pdf">Session slides</a></p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2022-02-10-Azure-MeetupStuttgart/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2022-02-10-Azure-MeetupStuttgart/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2022-02-10-Azure-MeetupStuttgart/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name>Klaus Bierschenk</name></author><summary type="html"><![CDATA[Figure 1: Azure Meetup Teaser]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2022-02-10-Azure-MeetupStuttgart_2.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2022-02-10-Azure-MeetupStuttgart_2.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Want to switch off ADFS? Looking for some content?</title><link href="http://localhost:4000/2022-01-10-GoodBye-ADFS-Overview/" rel="alternate" type="text/html" title="Want to switch off ADFS? Looking for some content?" /><published>2022-01-10T00:06:32+01:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/GoodBye-ADFS-Overview</id><content type="html" xml:base="http://localhost:4000/2022-01-10-GoodBye-ADFS-Overview/"><![CDATA[<figure>
  <img src="/MyPics/2022-01-09-GoodBye-ADFS-Linklist_I.png" style="width:75%" />
  <figcaption>Figure 1: Federation Services Splash Screen</figcaption>
</figure>

<p>Don’t get me wrong, ADFS is great. But it is also a technology with a long history and can (in some cases) be replaced by a better and easier technology in our modern Azure AD World.</p>

<p>But where to start when you have a bunch of applications relying in ADFS?</p>

<p>Or when you might have a relying party to M365 with your federated Azure AD Domain?</p>

<p>Then there are a couple of activities waiting for you …</p>

<p>I attended some sessions last year on shutting down ADFS, and in migrating Relying Party Trusts from ADFS to Azure AD Enterprise Applications, for enduser SSO experiences. From those events and talks I got my own short archive with a list of articles and videos from Microsoft which covers related topics.</p>

<p>In some cases it can make sense to get rid of the ADFS deployment and use PTA or PHS instead and also to move your relying party trusts to Azure AD Enterprise Applications. With this approach you can use the entire stack of Zero Trust features whilst accessing your applications. Conditional access e.g.</p>

<p>Therefore it is a good time to start with migration considerations … if not done already</p>

<table>
  <thead>
    <tr>
      <th>Description</th>
      <th>Link/Reference</th>
      <th>Comment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Upgrade from Active Directory Federation Services (AD FS)</td>
      <td><a href="https://www.microsoft.com/en-us/security/business/identity-access-management/upgrade-adfs" target="_blank">Show Article</a></td>
      <td>Overview of the entire situation! Start reading here when you plan to upgrade from ADFS to Azure AD. Contains comparison between ADFS and Azure AD Features</td>
    </tr>
    <tr>
      <td>Migrate from federation to PHS or PTA</td>
      <td><a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/migrate-from-federation-to-cloud-authentication" target="_blank">Show Article</a></td>
      <td>Good article with lots of considerations in planning and required pre-work on the entire migration process flow. Also covers step-by-step guidance for implementation. Provides links to more additional articles for topics which are not covered</td>
    </tr>
    <tr>
      <td>Migrate application authentication to Azure Active Directory</td>
      <td><a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/migrate-application-authentication-to-azure-active-directory" target="_blank">Show Article</a></td>
      <td>Bring time to read this one (30min read). Sophisticated article with details reagarding application migration from ADFS to Azure AD</td>
    </tr>
    <tr>
      <td>ADFS Activity Report</td>
      <td><a href="https://aka.ms/migrateapps/ADFSactivity" target="_blank">Show Article</a></td>
      <td>Explains how a ADFS activity report can be created to discover AD FS applications that can be migrated (or not). Covers additional claim rule support aswell</td>
    </tr>
    <tr>
      <td>Videos with topics to upgrade your apps authentication from ADFS to Azure AD</td>
      <td><a href="http://aka.ms/upgradeadfstoaad" target="_blank">Get Videos</a></td>
      <td>Short Videos on YouTube (5-7 min each) from MS Security</td>
    </tr>
    <tr>
      <td>Resources for migrating applications to Azure Active Directory</td>
      <td><a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/migration-resources" target="_blank">Show Article</a></td>
      <td>Links with resources for migration (deployment plan etc.)</td>
    </tr>
    <tr>
      <td>ADFS to AAD App Migration tool</td>
      <td><a href="https://aka.ms/migrateapps/ADFStools" target="_blank">Open Github</a></td>
      <td>Powershell based tools box with cmdlets to collect and analyze ADFS apps. Includes Excel export and cmdlets for migration</td>
    </tr>
  </tbody>
</table>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2022-01-10-GoodBye-ADFS-Overview/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2022-01-10-GoodBye-ADFS-Overview/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2022-01-10-GoodBye-ADFS-Overview/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[summary of ADFS decommissioning aspects]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2022-01-09-GoodBye-ADFS-Linklist_Cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2022-01-09-GoodBye-ADFS-Linklist_Cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cloud Identity Summit ´21 Conference session</title><link href="http://localhost:4000/2021-09-10-CloudIdentitySummit_21/" rel="alternate" type="text/html" title="Cloud Identity Summit ´21 Conference session" /><published>2021-09-10T21:13:32+02:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/CloudIdentitySummit_21</id><content type="html" xml:base="http://localhost:4000/2021-09-10-CloudIdentitySummit_21/"><![CDATA[<figure>
  <img src="/MyPics/2021-09-30-CloudIdentitySummit_21.png" style="width:75%" />
  <figcaption>Figure 1: Cloud Identity Summit '21 Teaser</figcaption>
</figure>

<h2 id="session-from-the-cloud-identity-summit-21">Session from the Cloud Identity Summit ´21</h2>

<p>This was my second appearence at the Cloud Identity Summit and I am proud to return to the line of other great speakers.</p>

<p>All my demos were running “perfectly” and “stable” during my session.</p>

<p>Murphy and demo-god, thanks for that 😀</p>

<p>I have enjoyed the evening and being part of the <a href="https://www.identitysummit.cloud">Cloud Identity Summit ´21</a></p>

<p>Please find my slides here: <a href="/MySlides/TroubleShoot_Sync_EN_Final.pdf">Session slides</a></p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2021-09-10-CloudIdentitySummit_21/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2021-09-10-CloudIdentitySummit_21/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2021-09-10-CloudIdentitySummit_21/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[Figure 1: Cloud Identity Summit '21 Teaser]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2021-09-30-CloudIdentitySummit_21_Cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2021-09-30-CloudIdentitySummit_21_Cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How to change language in M365 Portal for a synchronized identity</title><link href="http://localhost:4000/2021-07-04-ChangeLanguageinM365Portal/" rel="alternate" type="text/html" title="How to change language in M365 Portal for a synchronized identity" /><published>2021-07-04T00:01:32+02:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/ChangeLanguageinM365Portal</id><content type="html" xml:base="http://localhost:4000/2021-07-04-ChangeLanguageinM365Portal/"><![CDATA[<figure>
  <img src="/MyPics/2021-06-23-ChangeLanguageinM365Portal_cover.png" style="width:60%" />
</figure>

<h2 id="puzzling-why-language-can-not-be-changed-in-m365-portal-for-synced-users">Puzzling why language can not be changed in M365 Portal for synced users?</h2>

<p>Changing the language in the Azure portal instead is quite simple. Just click on the gear icon in the upper right corner and then on the language item, change it, save and you’re done. And the whole thing in the Azure Portal is independent of whether you are currently working with a cloud-only identity or with a synchronized account. So far so good 😃</p>

<p>However, there is one issue in my daily life that I have been wondering about and putting off for quite some time. Whenever I work with a synchronized account in the M365 Admin portal and try to change the language there, the following message is shown:</p>

<p>if the language is in German</p>

<figure>
  <img src="/MyPics/2021-06-23-ChangeLanguageinM365Portal_II.png" style="width:75%" />
  <figcaption>Figure 1: Language Setting in German</figcaption>
</figure>

<p>and when you have set it already in English language</p>

<figure>
  <img src="/MyPics/2021-06-23-ChangeLanguageinM365Portal_IV.png" style="width:75%" />
  <figcaption>Figure 2: Language setting in English</figcaption>
</figure>

<p>Now the whole thing becomes clumsy at last when you are the administrator yourself, as in my case. In my daily work the language was German, it was ok and the whole thing does not belong to my main issues. But whenever I try to change the language, I wonder at which central place this setting has to be made? On the myaccount.microsoft.com page? Or in some other place in the M365 portal?</p>

<p>This week I didn’t have the topic with the language in the M365 portal present at all and I was in completely different topics in the Active Directory and with the attributes. But after looking through the list of attributes, I noticed the <strong>preferredLanguage</strong> attribute</p>

<figure>
  <img src="/MyPics/2021-06-23-ChangeLanguageinM365Portal_III.png" style="width:50%" />
  <figcaption>Figure 3: Use Attribute "preferredLanguage" to set requested language</figcaption>
</figure>

<p>I remembered the language in the Microsoft 365 portal and indeed the attribute is used to set the language in Microsoft 365 in the form of the “Language Culture Names”. So <strong>de-DE</strong> stands for German and <strong>en-US</strong> for English - United States etc.. You can find an overview of the codes here:
<a href="https://docs.microsoft.com/en-us/previous-versions/commerce-server/ee825488(v=cs.20)?redirectedfrom=MSDN">Table of Language Culture Names</a></p>

<p>My first thought was, not really consistent from Microsoft to control the language behavior differently in two portals (Azure / M365), at least for synchronized identities. But the language is not changed too often and managing it centrally in on-premises for accounts originating there can make sense. After all, many other settings are also administered there, why not the language as well?</p>

<p>Cover image by Mary Pahlke from Pixabay</p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2021-07-04-ChangeLanguageinM365Portal/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2021-07-04-ChangeLanguageinM365Portal/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2021-07-04-ChangeLanguageinM365Portal/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2021-06-23-ChangeLanguageinM365Portal_cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2021-06-23-ChangeLanguageinM365Portal_cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Azure Meetup Bonn (10.06.2021) - Azure AD Connect - Schaltzentrale der hybriden Identitätsinfrastruktur (German session)</title><link href="http://localhost:4000/2021-06-11-Azure-MeetupBonn/" rel="alternate" type="text/html" title="Azure Meetup Bonn (10.06.2021) - Azure AD Connect - Schaltzentrale der hybriden Identitätsinfrastruktur (German session)" /><published>2021-06-11T00:01:32+02:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/Azure-MeetupBonn</id><content type="html" xml:base="http://localhost:4000/2021-06-11-Azure-MeetupBonn/"><![CDATA[<figure>
  <img src="/MyPics/2021-06-10-MeetupSplash.png" style="width:50%" />
</figure>

<h2 id="session-powerpoint-material">Session Powerpoint material</h2>

<p>All my demos were running perfect and stable during the session.</p>

<p>Murphy, thanks for that 😀</p>

<p>I have enjoyed the evening and being a speaker at the <a href="https://www.meetup.com/de-DE/Azure-Bonn-Meetup/events/277714201/.">Meetup in Bonn</a></p>

<p>Please find my slides here: <a href="/MySlides/Meetup_10.06.2021.pdf">Session slides</a></p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2021-06-11-Azure-MeetupBonn/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2021-06-11-Azure-MeetupBonn/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2021-06-11-Azure-MeetupBonn/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2021-06-10-MeetupSplash_cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2021-06-10-MeetupSplash_cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Zero Trust in Azure Identity - Part 5: Simple Monitoring Break Glass Accounts</title><link href="http://localhost:4000/2021-01-22-ZeroTrust-Monitoring/" rel="alternate" type="text/html" title="Zero Trust in Azure Identity - Part 5: Simple Monitoring Break Glass Accounts" /><published>2021-01-22T23:01:32+01:00</published><updated>2023-03-05T07:35:35+01:00</updated><id>http://localhost:4000/ZeroTrust%20Monitoring</id><content type="html" xml:base="http://localhost:4000/2021-01-22-ZeroTrust-Monitoring/"><![CDATA[<ul id="markdown-toc">
  <li><a href="#monitoring-and-dealing-with-critical-user-accounts" id="markdown-toc-monitoring-and-dealing-with-critical-user-accounts">Monitoring and Dealing with critical user accounts</a></li>
  <li><a href="#keep-ad-logs-perfectly" id="markdown-toc-keep-ad-logs-perfectly">Keep AD logs perfectly</a></li>
  <li><a href="#automated-alerts" id="markdown-toc-automated-alerts">Automated alerts</a></li>
  <li><a href="#be-careful-with-access-reviews" id="markdown-toc-be-careful-with-access-reviews">Be careful with Access Reviews</a></li>
</ul>

<h2 id="monitoring-and-dealing-with-critical-user-accounts">Monitoring and Dealing with critical user accounts</h2>

<p>Microsoft recommends so-called Break Glass accounts for emergency access. These have maximum permissions and are exempt from security measures such as “Conditional Access” policies. If something goes wrong with any policy or with the connection to on-premises, it is possible to access the tenant with these unaffected Break Glass accounts. In the first part of this post, we looked at more details about Break Glass accounts.
However, it is not only important to be prepared for an emergency. It is equally important to monitor activities around these accounts. For simplicity, the administrator has created a group with the accounts stored in the “Excludes” in the policies. But what if someone cheats his way into this group with his account? The person could work unhindered with wide rights past all policies and thus represents a high risk. Since all activities are documented in the Azure logs, it is easy based on these logs to react to entries using KQL (Kusto Query Language) queries and, for example, send a mail and an SMS to a sender circle when changes are made to the BGA group. The following is necessary for this.</p>

<h2 id="keep-ad-logs-perfectly">Keep AD logs perfectly</h2>

<p>First of all, a log analytics workspace is needed to which Azure automatically sends the AD logs. This makes sense even without our example with the BGA accounts, since the monitoring and logon logs are kept on a limited basis. For Azure AD P1/P2 license 30 days otherwise 7 days.
The Log Analytics workspace is quickly created in the Azure Portal in the dashboard of the same name. In Azure AD, the workspace is added to the diagnostic settings. Thus, the entries end up in the storage account of the workspace, for which the retention period can be defined as desired. Step-by-step instructions for this can be found in the Azure Docs with the corresponding keyword search.</p>

<h2 id="automated-alerts">Automated alerts</h2>

<p>The alerts view for a Log Analytics workspace lists the alert rules that the administrator has created here over time. If you create a new alert rule, the essential elements are a condition and an action group. Both can be created directly at this point. In the same way, you can also use existing conditions or action groups and reuse them as you wish.
If a new action group is created, it may either contain notifications or actions or both. For a notification as in our example, a message definition is sufficient. To do this, we define both a mail and SMS send type in the group, which justifies a change to a critical group, such as the group containing BGA accounts. Note that action groups can be used in a variety of ways, including triggering a webhook or starting an automation runbook.
The second part in the warning rule, the condition, is essentially based on a KQL query that can bring to light from the workspace anything stored in the logs there. Besides our area, the “audit log”, which we need to specify as the source here, there are other areas in a Log Analytics workspace. This ultimately depends on what data sources are connected to the Log Analytics.
Regardless of the alert rules, you can reach the KQL Editor in the Log Analytics workspace via the “Logs” option. Here, several examples are waiting to be tried out and modified for your own purposes. The whole thing invites you to try it out and it is not critical either. KQL queries are the foundation for warnings and the administrative expertise required for this wants to be learned through trial and error.</p>

<p>Back to our warning rule: figure (KQL group change.png) shows the basic statement and the KQL editor with the explorer.</p>

<figure class="medium">
  <a href="/MyPics/2021-01-22-ZeroTrust Monitoring_I.png"><img src="/MyPics/2021-01-22-ZeroTrust Monitoring_I.png" /></a>
  <figcaption>Exclude BGAs from CAs. A "must" in CA deployment</figcaption>
</figure>

<p>The statement is stripped down to the bare essentials and could still be drilled down, for example to include a temporal filter. In the lower area of the results you can see which values the result still provides, which are therefore part of the log entry. In addition to the account that the BGA group has changed, the account that has been added to the group is also visible here.
The KQL statement is inserted into the condition and is thus part of the signal logic (Figure: Warning_Rule_Condition_SignalLogic.png). A number greater than 0 in the case means that the KQL statement was found, thus a change to the group has taken place and this in turn entails that as part of the warning rule the condition is met and the mail and SMS are sent. This is the principle of warnings in Log Analytics. It is recommended in the context of Break Glass accounts to also generate a warning when a BGA account logs in, which can then be acted upon in the manner described. If we assume that all BGA user accounts start with “BG”, so for example the UPN is “BGAx@kbcorp.de” with sequential number x. The KQL statement for this looks like the following:</p>

<div class="language-posh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SigninLogs</span><span class="w">
</span><span class="o">|</span><span class="w"> </span><span class="n">where</span><span class="w"> </span><span class="nx">OperationName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Sign-in activity"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">where</span><span class="w"> </span><span class="nx">UserPrincipalName</span><span class="w"> </span><span class="nx">startswith</span><span class="w"> </span><span class="s2">"BG"</span><span class="o">.</span><span class="w"> 
</span></code></pre></div></div>

<h2 id="be-careful-with-access-reviews">Be careful with Access Reviews</h2>

<p>Actually, access reviews lend themselves to the control of BGA groups, but caution is advised in that context. Access Reviews also always allow members of a group to be removed, be it because an admin on his iPhone, on the go, mistakenly selects “deny”, the BGA accounts fall out of the group and are thus unsuitable for emergency use. Admittedly a contrived example but the possibility exists and with sensitive accounts such as the BGA accounts you should leave nothing to chance and fare far better with the warning rules against Access Reviews in the event of controls on the break Glass accounts.</p>

<p>Cover image by Peggy und Marco Lachmann-Anke from Pixabay</p>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />

<div class="share-box">
<h5>Share this:</h5>

<!--<a class="t" href="https://twitter.com/intent/tweet?text=&url=http://localhost:4000/2021-01-22-ZeroTrust-Monitoring/" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-twitter fa"></i><span> twitter</span></a>
-->

<a class="l" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=http://localhost:4000/2021-01-22-ZeroTrust-Monitoring/&amp;title=&amp;summary=&amp;source=webjeda" onclick="window.open(this.href, 'mywin',
'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;"><i class="fa fa-linkedin fa"></i><span> linkedin</span></a>

<a class="e" href="mailto:?subject=&amp;body=Check out this site http://localhost:4000/2021-01-22-ZeroTrust-Monitoring/"><i class="fa fa-envelope fa"></i><span> email</span></a>                          
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[Keep an eye to the most sensitive accounts in your Azure AD]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/MyPics/2021-01-22-ZeroTrust%20Monitoring_cover.png" /><media:content medium="image" url="http://localhost:4000/MyPics/2021-01-22-ZeroTrust%20Monitoring_cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>